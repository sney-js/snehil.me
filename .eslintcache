[{"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/index.tsx":"1","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/serviceWorker.ts":"2","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/App.tsx":"3","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/CachedResponses.ts":"4","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/Layout/index.ts":"5","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/index.ts":"6","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/Layout/MetaData.tsx":"7","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/Layout/Layout.tsx":"8","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/404.tsx":"9","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/ProjectDetailPage.tsx":"10","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/HomePage.tsx":"11","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Tooltip/Tooltip.tsx":"12","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/ProjectList/index.ts":"13","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/FrontendApi.ts":"14","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Modal/index.ts":"15","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/utils/Helpers.ts":"16","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/Renderer.tsx":"17","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/RichText/RichText.tsx":"18","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/ContentfulApi.ts":"19","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/Resolver.ts":"20","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/RouteGenerator.ts":"21","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/LinkElement/index.ts":"22","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Container/index.ts":"23","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/FilterList/index.ts":"24","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/ProjectList/ProjectList.tsx":"25","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/environments/environment.ts":"26","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/HeaderContainer/index.ts":"27","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/CookieBannerContainer/index.ts":"28","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Button/index.ts":"29","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Tag/index.ts":"30","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/index.tsx":"31","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Modal/Modal.tsx":"32","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/RouteConfig.ts":"33","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/EntryCleaner.ts":"34","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/FilterList/FilterListUtils.ts":"35","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/LinkElement/LinkElement.tsx":"36","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Container/Container.tsx":"37","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/FilterList/FilterList.tsx":"38","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/HeaderContainer/HeaderContainer.tsx":"39","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/CookieBannerContainer/CookieBannerContainer.tsx":"40","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Tag/Tag.tsx":"41","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Button/Button.tsx":"42","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcAdd.tsx":"43","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcArrowRight.tsx":"44","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcArrowLeft.tsx":"45","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcEyeAlt.tsx":"46","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcEye.tsx":"47","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcClose.tsx":"48","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcArrowTopright.tsx":"49","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcDanger.tsx":"50","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcLock.tsx":"51","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcMenu.tsx":"52","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/utils/index.ts":"53","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/RichText/index.ts":"54","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/handlers/LinkHandler.ts":"55","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/RespImage/index.ts":"56","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Link/index.ts":"57","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Link/Link.tsx":"58","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Input/Input.tsx":"59","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Fadeup/Fadeup.tsx":"60","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/utils/Device.ts":"61","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Card/index.ts":"62","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Input/index.ts":"63","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Form/index.ts":"64","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Grid/index.ts":"65","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/index.ts":"66","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/CookieBanner/index.ts":"67","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/RespImage/RespImage.tsx":"68","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Card/Card.tsx":"69","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Loaders/index.ts":"70","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Form/Form.tsx":"71","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Grid/Grid.tsx":"72","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/Header.tsx":"73","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/CookieBanner/CookieBanner.tsx":"74","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Loaders/Loaders.tsx":"75","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/LanguageSelector/LanguageSelector.tsx":"76","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/Navigation/index.ts":"77","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/models/Cookie.ts":"78","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/Navigation/Navigation.tsx":"79"},{"size":503,"mtime":1592337427379,"results":"80","hashOfConfig":"81"},{"size":5305,"mtime":1593463057059,"results":"82","hashOfConfig":"81"},{"size":796,"mtime":1592346242819,"results":"83","hashOfConfig":"81"},{"size":593,"mtime":1593462165455,"results":"84","hashOfConfig":"81"},{"size":86,"mtime":1592338059953,"results":"85","hashOfConfig":"81"},{"size":205,"mtime":1608488451722,"results":"86","hashOfConfig":"81"},{"size":640,"mtime":1593462165311,"results":"87","hashOfConfig":"81"},{"size":3145,"mtime":1608518765211,"results":"88","hashOfConfig":"81"},{"size":394,"mtime":1593462165542,"results":"89","hashOfConfig":"81"},{"size":2704,"mtime":1593464237139,"results":"90","hashOfConfig":"81"},{"size":1189,"mtime":1608488517643,"results":"91","hashOfConfig":"81"},{"size":2307,"mtime":1608518573981,"results":"92","hashOfConfig":"81"},{"size":92,"mtime":1608488517641,"results":"93","hashOfConfig":"81"},{"size":3141,"mtime":1593464224578,"results":"94","hashOfConfig":"81"},{"size":35,"mtime":1608492623636,"results":"95","hashOfConfig":"81"},{"size":1065,"mtime":1593463030237,"results":"96","hashOfConfig":"81"},{"size":1056,"mtime":1593462165416,"results":"97","hashOfConfig":"81"},{"size":1633,"mtime":1593462165330,"results":"98","hashOfConfig":"81"},{"size":1783,"mtime":1593462165507,"results":"99","hashOfConfig":"81"},{"size":3671,"mtime":1593462916660,"results":"100","hashOfConfig":"81"},{"size":6017,"mtime":1593463266693,"results":"101","hashOfConfig":"81"},{"size":41,"mtime":1592338171447,"results":"102","hashOfConfig":"81"},{"size":39,"mtime":1592337427362,"results":"103","hashOfConfig":"81"},{"size":75,"mtime":1592760721935,"results":"104","hashOfConfig":"81"},{"size":5493,"mtime":1608575355189,"results":"105","hashOfConfig":"81"},{"size":215,"mtime":1592339379246,"results":"106","hashOfConfig":"81"},{"size":45,"mtime":1592337427367,"results":"107","hashOfConfig":"81"},{"size":51,"mtime":1592338059951,"results":"108","hashOfConfig":"81"},{"size":36,"mtime":1592337427368,"results":"109","hashOfConfig":"81"},{"size":33,"mtime":1592505992268,"results":"110","hashOfConfig":"81"},{"size":506,"mtime":1593462165539,"results":"111","hashOfConfig":"81"},{"size":2640,"mtime":1608506461273,"results":"112","hashOfConfig":"81"},{"size":442,"mtime":1593462165493,"results":"113","hashOfConfig":"81"},{"size":2706,"mtime":1593462896789,"results":"114","hashOfConfig":"81"},{"size":959,"mtime":1593348563741,"results":"115","hashOfConfig":"81"},{"size":550,"mtime":1592600994786,"results":"116","hashOfConfig":"81"},{"size":2584,"mtime":1593462165350,"results":"117","hashOfConfig":"81"},{"size":2225,"mtime":1608491450000,"results":"118","hashOfConfig":"81"},{"size":384,"mtime":1592341867835,"results":"119","hashOfConfig":"81"},{"size":498,"mtime":1592338059951,"results":"120","hashOfConfig":"81"},{"size":710,"mtime":1593462165440,"results":"121","hashOfConfig":"81"},{"size":1630,"mtime":1592337427368,"results":"122","hashOfConfig":"81"},{"size":575,"mtime":1592761597199,"results":"123","hashOfConfig":"81"},{"size":370,"mtime":1592761597212,"results":"124","hashOfConfig":"81"},{"size":345,"mtime":1592761597225,"results":"125","hashOfConfig":"81"},{"size":515,"mtime":1592761597291,"results":"126","hashOfConfig":"81"},{"size":684,"mtime":1592761597312,"results":"127","hashOfConfig":"81"},{"size":431,"mtime":1592761597261,"results":"128","hashOfConfig":"81"},{"size":568,"mtime":1592761597175,"results":"129","hashOfConfig":"81"},{"size":537,"mtime":1592761597247,"results":"130","hashOfConfig":"81"},{"size":483,"mtime":1592761597328,"results":"131","hashOfConfig":"81"},{"size":385,"mtime":1592761597274,"results":"132","hashOfConfig":"81"},{"size":53,"mtime":1593462165412,"results":"133","hashOfConfig":"81"},{"size":38,"mtime":1592338059955,"results":"134","hashOfConfig":"81"},{"size":221,"mtime":1593462165466,"results":"135","hashOfConfig":"81"},{"size":39,"mtime":1592338059954,"results":"136","hashOfConfig":"81"},{"size":34,"mtime":1592337427371,"results":"137","hashOfConfig":"81"},{"size":2006,"mtime":1593461836875,"results":"138","hashOfConfig":"81"},{"size":10049,"mtime":1593462165366,"results":"139","hashOfConfig":"81"},{"size":1342,"mtime":1592765568454,"results":"140","hashOfConfig":"81"},{"size":3180,"mtime":1593462525041,"results":"141","hashOfConfig":"81"},{"size":34,"mtime":1592337427361,"results":"142","hashOfConfig":"81"},{"size":35,"mtime":1592337427370,"results":"143","hashOfConfig":"81"},{"size":34,"mtime":1592337427364,"results":"144","hashOfConfig":"81"},{"size":34,"mtime":1592337427365,"results":"145","hashOfConfig":"81"},{"size":36,"mtime":1592338059950,"results":"146","hashOfConfig":"81"},{"size":42,"mtime":1592338059945,"results":"147","hashOfConfig":"81"},{"size":1107,"mtime":1593462165548,"results":"148","hashOfConfig":"81"},{"size":2558,"mtime":1608494966912,"results":"149","hashOfConfig":"81"},{"size":37,"mtime":1592337427371,"results":"150","hashOfConfig":"81"},{"size":6255,"mtime":1593462165423,"results":"151","hashOfConfig":"81"},{"size":1452,"mtime":1592337427365,"results":"152","hashOfConfig":"81"},{"size":1558,"mtime":1593462165430,"results":"153","hashOfConfig":"81"},{"size":1745,"mtime":1608493689353,"results":"154","hashOfConfig":"81"},{"size":591,"mtime":1592337427371,"results":"155","hashOfConfig":"81"},{"size":2448,"mtime":1593462165354,"results":"156","hashOfConfig":"81"},{"size":40,"mtime":1592338059949,"results":"157","hashOfConfig":"81"},{"size":77,"mtime":1592337427380,"results":"158","hashOfConfig":"81"},{"size":2005,"mtime":1593462165545,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},"1s3ow19",{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"163"},{"filePath":"167","messages":"168","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"163"},{"filePath":"170","messages":"171","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"163"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"177","messages":"178","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"163"},{"filePath":"180","messages":"181","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"163"},{"filePath":"183","messages":"184","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"163"},{"filePath":"186","messages":"187","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"163"},{"filePath":"189","messages":"190","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"163"},{"filePath":"192","messages":"193","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"163"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"197","messages":"198","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"163"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"163"},{"filePath":"205","messages":"206","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"163"},{"filePath":"208","messages":"209","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"163"},{"filePath":"211","messages":"212","errorCount":1,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"163"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"163"},{"filePath":"217","messages":"218","errorCount":4,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"163"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"226","messages":"227","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"163"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"241","messages":"242","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"163"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"163"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"163"},{"filePath":"252","messages":"253","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"163"},{"filePath":"255","messages":"256","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"163"},{"filePath":"258","messages":"259","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"163"},{"filePath":"261","messages":"262","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"163"},{"filePath":"264","messages":"265","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"163"},{"filePath":"267","messages":"268","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"163"},{"filePath":"270","messages":"271","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"163"},{"filePath":"273","messages":"274","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"163"},{"filePath":"276","messages":"277","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"163"},{"filePath":"279","messages":"280","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"163"},{"filePath":"282","messages":"283","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"163"},{"filePath":"285","messages":"286","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"163"},{"filePath":"288","messages":"289","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"163"},{"filePath":"291","messages":"292","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"163"},{"filePath":"294","messages":"295","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"163"},{"filePath":"297","messages":"298","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"163"},{"filePath":"300","messages":"301","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"163"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"163"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"314","messages":"315","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"163"},{"filePath":"317","messages":"318","errorCount":4,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"163"},{"filePath":"320","messages":"321","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"163"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"337","messages":"338","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"163"},{"filePath":"340","messages":"341","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"163"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"345","messages":"346","errorCount":6,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"163"},{"filePath":"348","messages":"349","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"163"},{"filePath":"351","messages":"352","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"163"},{"filePath":"354","messages":"355","errorCount":3,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"163"},{"filePath":"357","messages":"358","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"163"},{"filePath":"360","messages":"361","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"163"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"367","messages":"368","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369"},"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/index.tsx",["370"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/serviceWorker.ts",["371","372"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window\n    .fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/App.tsx",["373","374"],"import React from 'react';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport * as PAGES from 'pages';\nimport CachedResponses from './contentful/CachedResponses';\nimport Layout from './containers/Layout';\nimport './styles/main.scss';\n\nCachedResponses.getInstance();\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Layout>\n        <Switch>\n          <Route path='/project/:projectId' component={PAGES.projectDetail} />\n          <Route path='/project' exact component={PAGES.project} />\n          <Route path='/' exact component={PAGES.index} />\n          <Route path='*' component={PAGES.error} />\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/CachedResponses.ts",["375","376","377"],"class CachedResponses {\n  private static instance: CachedResponses;\n\n  private _cache = {};\n\n  public static getInstance(): CachedResponses {\n    if (!CachedResponses.instance) {\n      CachedResponses.instance = new CachedResponses();\n    }\n\n    return CachedResponses.instance;\n  }\n\n  public setResponse(key: string, data: object) {\n    this._cache[key] = data;\n    console.log('SET Cached ', key, { ...this._cache });\n  }\n\n  public getResponse(key: string): object {\n    console.log('GET Cache ', key, { ...this._cache });\n    return this._cache[key];\n  }\n}\n\nexport default CachedResponses;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/Layout/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/Layout/MetaData.tsx",["378","379"],"import React from 'react';\nimport { Helmet } from 'react-helmet';\n\ntype MetaDataStructure = {\n  title: string;\n  description?: string;\n  keywords?: string[];\n  image?: string;\n};\n\nconst MetaData = (props: MetaDataStructure) => {\n  return (\n    <Helmet>\n      <title>{props?.title}</title>\n      {props?.description ? (\n        <meta name='description' content={props.description} />\n      ) : null}\n      {props?.keywords ? (\n        <meta name='keywords' content={props.keywords?.join(',')} />\n      ) : null}\n      {props?.image ? <meta property='og:image' content={props.image} /> : null}\n    </Helmet>\n  );\n};\n\nexport default MetaData;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/Layout/Layout.tsx",["380","381"],"import React, { useEffect, useState } from 'react';\nimport { makeClass, setCSSVar, WINDOW } from 'utils/Helpers';\nimport HeaderContainer from 'containers/HeaderContainer';\nimport Container from 'components/Container';\nimport CookieBannerContainer from 'containers/CookieBannerContainer';\nimport Modal from '../../components/Modal';\nimport { ModalProps } from '../../components/Modal/Modal';\nimport Tooltip, { TooltipProps } from '../../components/Tooltip/Tooltip';\n\ntype LayoutProps = {\n  locale?: string;\n  globalLoader?: boolean;\n  children?: any;\n  theme?: 'dark' | 'light';\n};\n\nexport type GlobalContextType = {\n  showModal(modalData: ModalProps): void;\n  hideModal(): void;\n  showTooltip(data: TooltipProps): void;\n  hideTooltip(): void;\n};\n\nconst globalInitialVals: GlobalContextType = {\n  hideTooltip(): void {},\n  showTooltip(data: TooltipProps): void {},\n  showModal: () => {},\n  hideModal: () => {}\n};\nexport const GlobalContext = React.createContext(globalInitialVals);\n\nconst toggleTheme = function (selected: string) {\n  document.body.dataset.theme = selected;\n};\n\nfunction Layout(props: LayoutProps) {\n  const [modalData, setModalData] = useState<ModalProps | undefined>(undefined);\n  const [tooltipData, setTooltipData] = useState<TooltipProps | undefined>(\n    undefined\n  );\n  const globalState: GlobalContextType = {\n    hideTooltip(): void {\n      setTooltipData((d) => Object.assign({}, d, { show: false }));\n    },\n    showTooltip(data: TooltipProps): void {\n      setTooltipData(Object.assign(data, { show: true }));\n    },\n    showModal: (data) => {\n      setModalData(data || {});\n    },\n    hideModal: () => setModalData(undefined)\n  };\n\n  useEffect(() => {\n    if (WINDOW) {\n      WINDOW.scrollTo({ top: 0 });\n\n      if (\n        window.matchMedia &&\n        window.matchMedia('(prefers-color-scheme: dark)').matches\n      ) {\n        // dark mode\n        toggleTheme('dark');\n      } else {\n        toggleTheme(props.theme || 'light');\n      }\n    }\n  }, [props.theme]);\n\n  return (\n    <div className={makeClass(['d-layout'])}>\n      <GlobalContext.Provider value={globalState}>\n        <HeaderContainer />\n\n        <div className={makeClass(['d-content'])}>\n          {props.children ? (\n            <main>{props.children}</main>\n          ) : (\n            <Container\n              layout='centered'\n              style={setCSSVar({ '--val-spinner-size': '3' })}\n            >\n              <i className='gg-spinner' />\n            </Container>\n          )}\n        </div>\n\n        <div className='d-modalContainer' style={{ zIndex: 100 }}>\n          {!!modalData && (\n            <Modal\n              {...modalData}\n              open={!!modalData}\n              onClickClose={() => {\n                globalState.hideModal();\n              }}\n            />\n          )}\n        </div>\n\n        <div className='d-tooltipContainer' style={{ zIndex: 110 }}>\n          <Tooltip {...tooltipData} />\n        </div>\n\n        <div className='d-cookieBanner'>\n          <CookieBannerContainer />\n        </div>\n\n        {/* <FooterContainer /> */}\n      </GlobalContext.Provider>\n    </div>\n  );\n}\n\nexport default Layout;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/404.tsx",["382"],"import React, { FunctionComponent } from 'react';\nimport Container from 'components/Container';\nimport Layout from '../containers/Layout';\nimport { PageProps } from './PageType';\n\nconst ErrorPage: FunctionComponent<PageProps> = (props) => {\n  return (\n    <div>\n      <Container layout='maxWidth' pad='All'>\n        <h1>404</h1>\n      </Container>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/ProjectDetailPage.tsx",["383"],"import React, { FunctionComponent } from 'react';\nimport Container from 'components/Container';\nimport { PageProps } from './PageType';\nimport { renderContentContainer } from '../contentful/Renderer';\nimport { useContentfulPage } from '../contentful/FrontendApi';\nimport {\n  IProject,\n  IProjectContentBlock\n} from '../contentful/@types/contentful';\nimport RichText from '../containers/RichText/RichText';\nimport LinkElement from '../containers/LinkElement';\nimport Tag from '../elements/Tag';\nimport Button from '../elements/Button';\nimport { IcClose } from '../elements/SvgElements';\n\nconst ProjectDetailPage: FunctionComponent<PageProps> = (props) => {\n  const { projectId } = props.match.params;\n\n  let pageData = useContentfulPage('project', projectId);\n\n  let article = pageData.page as IProject;\n  return (\n    <div>\n      {pageData.finished && (\n        <Container pad='All' layout='maxWidth' className='d-project-page'>\n          <div className='d-project-close'>\n            <LinkElement path='/'>\n              <Button icon={<IcClose />} appearance='secondary' />\n            </LinkElement>\n          </div>\n          {article ? (\n            <>\n              <Container layout='maxWidthNarrow' pad='Top'>\n                <h1>{article.fields?.title}</h1>\n                <div>\n                  {article.fields.technologies?.map((a, i) => (\n                    <Tag appearance='block' title={a} key={i} />\n                  ))}\n                </div>\n                <RichText markdown={article.fields.description} />\n              </Container>\n              {article.fields?.content?.map(renderProjectContent)}\n            </>\n          ) : (\n            <small>Project not found!</small>\n          )}\n        </Container>\n      )}\n    </div>\n  );\n};\n\nconst renderProjectContent = (item, key) => {\n  const contentItem = item as IProjectContentBlock;\n  return (\n    <Container key={key} layout='maxWidth'>\n      {contentItem.fields.images?.map((asset, i) =>\n        renderContentContainer({ type: 'Asset', ...asset }, key + i)\n      )}\n      {contentItem.fields.textBlock1 && (\n        <Container pad='Vertical' layout='maxWidthNarrow'>\n          <RichText markdown={contentItem.fields.textBlock1} />\n        </Container>\n      )}\n      {contentItem.fields.textBlock2 && (\n        <Container pad='Vertical' layout='maxWidthNarrow'>\n          <RichText markdown={contentItem.fields.textBlock2} />\n        </Container>\n      )}\n      {contentItem.fields.iFrame && (\n        <Container pad='Vertical'>\n          <div\n            dangerouslySetInnerHTML={{ __html: contentItem.fields.iFrame }}\n          />\n        </Container>\n      )}\n    </Container>\n  );\n};\n\nexport default ProjectDetailPage;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/HomePage.tsx",["384"],"import React, { FunctionComponent, useState } from 'react';\nimport { PageProps } from './PageType';\nimport { ProjectFilterList } from './ProjectList';\nimport Container from '../components/Container';\nimport { useContentfulEntry } from '../contentful/FrontendApi';\nimport { IFiltersFields } from '../contentful/@types/contentful';\nimport FilterList, {\n  getFilteredList,\n  getMockFilterList\n} from '../containers/FilterList';\n\nconst TEST_DEV = true;\n\nconst HomePage: FunctionComponent<PageProps> = (props) => {\n  const [filters, setSelectedFilters] = useState<string[]>([]);\n\n  let filterEntry;\n  filterEntry = useContentfulEntry('filters', 'project-filters');\n\n  let filtersList = TEST_DEV\n    ? getMockFilterList()\n    : ((filterEntry?.entry?.fields as IFiltersFields)?.filterData as string[]);\n  return (\n    <div>\n      <Container className='d-filter-project-block'>\n        <FilterList\n          filterList={getFilteredList(filtersList)}\n          selected={(list) => {\n            console.log(list);\n            setSelectedFilters(list);\n          }}\n        />\n        <ProjectFilterList technologyFilters={filters} />\n      </Container>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Tooltip/Tooltip.tsx",["385"],"import React, { FC, useLayoutEffect, useRef, useState } from 'react';\nimport { makeClass } from 'utils/Helpers';\nimport { CSSTransition } from 'react-transition-group';\n\nexport type TooltipProps = {\n  /**\n   * Description above title\n   */\n  title?: string;\n  /**\n   * Custom Position coords\n   */\n  atPosition?: [number, number];\n  /**\n   *\n   */\n  show?: boolean;\n} & React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * The `Tooltip` component example.\n * @param props\n * @constructor\n */\nconst Tooltip: FC<TooltipProps> = (props: TooltipProps) => {\n  const { atPosition, className, children, show, ...rest } = props;\n  const classes = makeClass(['d-Tooltip', className]);\n  const ref = useRef<any>();\n  const [hasHover, setHasHover] = useState<boolean>();\n\n  useLayoutEffect(() => {\n    adjustPosition(atPosition, ref.current);\n  }, [ref.current, atPosition]);\n\n  // if (!show && !hasHover) return null;\n  return (\n    <CSSTransition\n      unmountOnExit\n      in={show || hasHover}\n      timeout={{ enter: 0, exit: 500 }}\n      classNames='tooltip'\n    >\n      <div\n        className={classes}\n        {...rest}\n        ref={ref}\n        onMouseEnter={() => setHasHover(true)}\n        onMouseLeave={() => setHasHover(false)}\n      >\n        {children}\n      </div>\n    </CSSTransition>\n  );\n};\n\nfunction adjustPosition(atPosition?: [number, number], element?: HTMLElement) {\n  if (!atPosition || !element) return;\n  let tooltip = element;\n  let posX = atPosition[0];\n  let posY = atPosition[1];\n  let sp = 16;\n\n  let width = tooltip.clientWidth;\n  let overflowLeft = posX - width / 2 - sp < 0;\n  let overflowRight = posX + width / 2 + sp > document.body.clientWidth;\n  if (overflowLeft) {\n    tooltip.style.left = sp + 'px';\n  } else if (overflowRight) {\n    tooltip.style.left = document.body.clientWidth - sp - width / 2 + 'px';\n  } else {\n    tooltip.style.left = posX - width / 2 + 'px';\n  }\n\n  let height = tooltip.clientHeight;\n  let overflowTop = posY - height / 2 - sp < 0;\n  let overflowBottom = posY + height / 2 + sp > document.body.clientHeight;\n  if (overflowTop) {\n    tooltip.style.top = sp + 'px';\n  } else if (overflowBottom) {\n    tooltip.style.top = document.body.clientHeight - sp - height + 'px';\n  } else {\n    tooltip.style.top = posY - height / 2 + 'px';\n  }\n}\n\nexport default Tooltip;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/ProjectList/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/FrontendApi.ts",["386","387"],"import { useEffect, useState } from 'react';\nimport { ContentfulApi } from './ContentfulApi';\nimport { environment } from '../environments/environment';\nimport { ContentfulEntry, getContentLocale } from './Resolver';\nimport RouteGenerator from './RouteGenerator';\nimport CachedResponses from './CachedResponses';\n\ntype ContentfulApiState = { finished: boolean };\n\nconst _useContentfulStateProvider = (\n  query: object,\n  dataHandler: (data: any[]) => any\n): ContentfulApiState & object => {\n  const [page, setPageData] = useState({\n    finished: false\n  });\n\n  useEffect(() => {\n    if (query === undefined) return;\n\n    const cachedData = CachedResponses.getInstance().getResponse(\n      JSON.stringify(query)\n    );\n    console.log(cachedData, 'cachedData');\n    if (cachedData) {\n      let finalVal = Object.assign({ finished: true }, cachedData);\n      setPageData(finalVal);\n      console.log('Using cached');\n      return;\n    }\n\n    const client = new ContentfulApi({\n      space: environment.contentful.space,\n      accessToken: environment.contentful.accessToken,\n      environment: environment.contentful.environment\n    });\n\n    client\n      .fetchQuery(query)\n      .then((data) => {\n        if (data.length) {\n          let finalData = dataHandler(data);\n\n          // caching in react memory\n          CachedResponses.getInstance().setResponse(\n            JSON.stringify(query),\n            finalData\n          );\n\n          let finalVal = Object.assign({ finished: true }, finalData);\n          setPageData(finalVal);\n        } else {\n          setPageData({ finished: true });\n        }\n      })\n      .catch((e) => {\n        console.error(e);\n        setPageData({ finished: true });\n      });\n  }, []);\n\n  return page;\n};\n\n/**\n *\n * @param name\n * @param contentType\n */\nexport const useContentfulEntry = (\n  contentType: string,\n  name: string\n): ContentfulApiState & { entry?: ContentfulEntry } => {\n  return _useContentfulStateProvider(\n    { content_type: contentType, 'fields.name': name },\n    (data) => {\n      return { entry: data[0] };\n    }\n  );\n};\n\n/**\n *\n * @param name\n * @param contentType\n */\nexport const useContentfulPage = (\n  contentType: string,\n  name: string\n): ContentfulApiState & { page?: ContentfulEntry } => {\n  return _useContentfulStateProvider(\n    { content_type: contentType, 'fields.name': name },\n    (data) => {\n      let pageData = RouteGenerator.generatePageData(\n        Object.assign({}, data[0]),\n        getContentLocale(data[0]) || 'null'\n      );\n      return { page: pageData?.page };\n    }\n  );\n};\n\n/**\n * Get multiple pages\n * @param condition\n * @param contentType\n */\nexport const useContentfulPages = (\n  contentType: string,\n  condition?: { [key: string]: string }\n): ContentfulApiState & { pages?: ContentfulEntry[] } => {\n  return _useContentfulStateProvider(\n    { content_type: contentType, ...condition },\n    (data) => {\n      let pagesData = data.map((page) => {\n        return RouteGenerator.generatePageData(\n          Object.assign({}, page),\n          getContentLocale(page) || 'null'\n        )?.page;\n      });\n      return { pages: pagesData };\n    }\n  );\n};\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Modal/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/utils/Helpers.ts",["388","389"],"import { LinkData } from '../models/LinkData';\n// import { LinkType } from '../models/Link';\n\nexport const makeClass: (\n  classes: Array<string | boolean | undefined>\n) => string = (classes: Array<string | boolean | undefined>) =>\n  classes\n    .filter((e) => e)\n    .join(' ')\n    .trim();\n\nexport const WINDOW: any = (typeof window === 'object' && window) || undefined;\n\ntype CSSVarType = {\n  [key: string]: string | number | undefined;\n};\ntype CSSVarTypeReturn = {\n  [key: string]: string | number;\n};\n\nexport const setCSSVar = (obj: CSSVarType): CSSVarTypeReturn => {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (obj[key] === undefined) {\n        delete obj[key];\n      }\n    }\n  }\n  return obj as CSSVarTypeReturn;\n};\n\nexport const cleanPath = function (result: string) {\n  return `${result}/`.toString().replace(/[/]+/g, '/');\n};\n\nexport const getPathBreaks = function (path?: string) {\n  const pathname = path || WINDOW?.location?.pathname;\n  return WINDOW && pathname.split('/').filter((e) => e.length);\n};\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/Renderer.tsx",["390","391","392","393"],"import React from 'react';\nimport RichText from 'containers/RichText';\nimport RespImage from 'containers/RespImage';\nimport Container from 'components/Container';\nimport { Asset } from 'contentful';\nimport { IProjectContentBlock } from './@types/contentful';\nimport { getContentType } from './Resolver';\n\n/**\n *\n * @param item\n * @param key\n * @param rest\n */\nexport const renderContentContainer = (item, key?) => {\n  switch (getContentType(item)) {\n    case 'rich-text':\n      return (\n        <Container key={key} pad='Vertical' layout='maxWidthNarrow' animateIn>\n          <RichText document={item.fields.content} />\n        </Container>\n      );\n    case 'image':\n      return (\n        <Container key={key} pad='Vertical' layout='maxWidth' animateIn>\n          <RespImage image={item.fields.image} />\n        </Container>\n      );\n    case 'Asset': {\n      return (\n        <Container key={key} pad='Vertical' layout='maxWidth' animateIn>\n          <RespImage image={item} />\n        </Container>\n      );\n    }\n    default:\n      return null;\n  }\n};\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/RichText/RichText.tsx",["394","395"],"import React from 'react';\nimport { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport LinkElement from 'elements/Link';\nimport Markdown from 'react-markdown/with-html';\nimport RespImage from 'containers/RespImage';\n\nconst GLOBAL_OPTIONS = {\n  renderText: (text) =>\n    text.split('\\n').flatMap((text, i) => [i > 0 && <br />, text]),\n  renderNode: {\n    [BLOCKS.EMBEDDED_ASSET]: (node) => {\n      return (\n        <figure className='d-image'>\n          <RespImage image={node.data.target} />\n        </figure>\n      );\n    },\n    [INLINES.ENTRY_HYPERLINK]: (node) => {\n      return (\n        <LinkElement {...node.data.target.fields}>\n          {node.content[0] && node.content[0].value}\n        </LinkElement>\n      );\n    },\n    // text hyperlinks are always external.\n    [INLINES.HYPERLINK]: (node) => {\n      return (\n        <a href={node.data.uri} target='_blank' rel='noreferrer'>\n          {node.content[0].value}\n        </a>\n      );\n    }\n  }\n};\n\nexport type RichTextType = {\n  markdown?: string;\n  document?: any;\n};\n\nexport default (props: RichTextType) => {\n  if (props.document) {\n    const data = documentToReactComponents(\n      props.document,\n      GLOBAL_OPTIONS\n    ) as Array<any>;\n    if (data.length && !data[data.length - 1].props.children[0]) {\n      data.pop();\n    }\n    return <section className='d-rich-text'>{data}</section>;\n  }\n  if (props.markdown) {\n    return (\n      <section className='d-rich-text'>\n        <Markdown source={props.markdown} escapeHtml />\n      </section>\n    );\n  }\n  return null;\n};\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/ContentfulApi.ts",["396","397","398","399","400","401","402","403","404","405","406","407","408"],"import * as contentful from 'contentful';\n\nexport class ContentfulApi {\n  client: any = null;\n\n  private defaultLocale: string;\n\n  private locales: Array<string>;\n\n  private currentLocale: string;\n\n  constructor({ space, accessToken, environment }, host?) {\n    this.client = contentful.createClient({\n      space,\n      accessToken,\n      environment,\n      host\n    });\n  }\n\n  setLocale(locale: string) {\n    this.currentLocale = locale;\n    return this;\n  }\n\n  async getLocale() {\n    const data = await this.client.getLocales();\n    const defaultLocale = data.items.find((item) => item.default).code;\n    this.defaultLocale = defaultLocale;\n    this.currentLocale = defaultLocale;\n    return defaultLocale;\n  }\n\n  async getLocales() {\n    const locales = await this.client.getLocales();\n    this.locales = locales.items.map((item) => item.code);\n    return this.locales;\n  }\n\n  async getPages(contentTypePageName = 'page', filter?) {\n    return await this.client\n      .getEntries({\n        content_type: contentTypePageName,\n        include: 10,\n        locale: this.currentLocale,\n        ...filter\n      })\n      .catch((e) => {\n        console.error(e);\n        throw e;\n      });\n  }\n\n  /**\n   *\n   * @param query = {content_type=\"page\", field:\"slug\", value:\"index\", include: 3 }\n   * @returns {Promise<Entry<any>>}\n   */\n  async fetchEntry({ content_type, field, value, ...rest }) {\n    const entries = await this.client.getEntries({\n      content_type,\n      locale: this.currentLocale,\n      ...rest\n    });\n    return entries.items.find((en) => en.fields[field] === value);\n  }\n\n  async fetchQuery(query, filter?) {\n    const entries = await this.client.getEntries(query);\n\n    if (filter) {\n      return entries.items.map(filter);\n    }\n    return entries.items;\n  }\n}\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/Resolver.ts",["409","410","411","412","413","414","415","416","417","418","419"],"import { Asset, Sys } from 'contentful';\nimport { LinkData } from '../models/LinkData';\nimport RouteConfig from './RouteConfig';\nimport { WINDOW } from '../utils/Helpers';\n\nexport type ContentfulEntry = {\n  sys?: Sys;\n  fields: any;\n  type?: string;\n  locale?: string;\n};\n\nexport let getPageType = (contentType: string | undefined) => {\n  if (!contentType) return undefined;\n  return RouteConfig.pages.find((e) => e.contentType === contentType);\n};\n\nexport let getDefaultLocale = () => RouteConfig.defaultLocale;\n/**\n * Returns the resolved path from a given ContentfulNode\n * @param node\n */\nexport const resolve = (node: ContentfulEntry): string | undefined => {\n  if (!node) return undefined;\n\n  let contentType = getContentType(node);\n  let pageContentTypeConfig = getPageType(contentType);\n\n  if (!pageContentTypeConfig) {\n    return undefined;\n  }\n\n  return _resolvePagePath(\n    node,\n    pageContentTypeConfig.parentField,\n    pageContentTypeConfig.parentPath\n  );\n};\n\n/**\n * Given ILink or a contentType defined in RouteConfig, determines its LinkData\n * @param node\n */\nexport const resolveLinkInfo = (node: ContentfulEntry): LinkData | null => {\n  if (node && node.fields.path) return null;\n\n  let internalLinkNode;\n\n  const contentType = getContentType(node);\n\n  // pages can be directly resolved too\n  if (getPageType(contentType)) {\n    internalLinkNode = node;\n  } else {\n    internalLinkNode = node.fields.internalLink;\n  }\n\n  let externalLinkNode = node.fields.externalLink;\n  let { anchorId } = node.fields;\n\n  const linkData = {\n    title: node.fields.title,\n    newTab: node.fields.isNewTab,\n    path: '',\n    isExternal: !!externalLinkNode || (!internalLinkNode && !!anchorId),\n    associatedIcon: node.fields.associatedIcon\n  } as LinkData;\n\n  if (internalLinkNode) {\n    linkData.path =\n      resolve(internalLinkNode) + ((anchorId && `#${anchorId}`) || '');\n  } else if (externalLinkNode || anchorId) {\n    linkData.path =\n      (externalLinkNode || '') + ((anchorId && `#${anchorId}`) || '');\n  }\n  return linkData;\n};\n\nexport const resolveAssetLink = (node: Asset) => {\n  return node?.fields?.file?.url;\n};\n\nexport const cleanPath = function (result: string) {\n  return `${result}/`.toString().replace(/[/]+/g, '/');\n};\n\nexport const getPathBreaks = function () {\n  const pathname = WINDOW?.location?.pathname;\n  return WINDOW && pathname.split('/').filter((e) => e.length);\n};\n\nexport const getContentType = (node?: ContentfulEntry) => {\n  try {\n    return node!.type || node!.sys?.contentType.sys.id;\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const getContentLocale = (node?: ContentfulEntry) => {\n  try {\n    return node!.locale || node!.sys?.locale;\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst _resolvePagePath = (\n  page: ContentfulEntry,\n  parentPageFieldName?: string,\n  parentPagePathName?: string\n) => {\n  const pages: string[] = [];\n  const stack: ContentfulEntry[] = [];\n  stack.push(page);\n\n  while (stack.length > 0) {\n    let node = stack.pop();\n    if (!node) continue;\n\n    let name: string = node.fields.name === 'index' ? '' : node.fields.name;\n\n    pages.push(name);\n\n    if (parentPageFieldName && node.fields[parentPageFieldName.toString()]) {\n      stack.push(node.fields[parentPageFieldName.toString()]);\n    }\n  }\n\n  const locale = getContentLocale(page);\n  // DEFAULT_LOCALE is not undefined during build. From frontend, defaultLocale is essential\n  if (locale && locale !== RouteConfig.defaultLocale) {\n    pages.push(locale);\n  }\n\n  if (parentPagePathName) {\n    pages.push(parentPagePathName);\n  }\n\n  let result = `/${pages.reverse().join('/')}`;\n  result = cleanPath(result);\n\n  return result;\n};\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/RouteGenerator.ts",["420","421","422","423","424","425"],"import { ContentfulApi } from './ContentfulApi';\nimport { ContentfulEntry, resolve } from './Resolver';\nimport { CleanupConfig, cleanupData } from './EntryCleaner';\nimport RouteConfig from './RouteConfig';\nimport * as Flatted from 'flatted';\n\ninterface Route {\n  path: string;\n  template?: string;\n  redirect?: URL | string;\n  children?: Route[];\n\n  getData?(): Promise<object> | object;\n\n  replace?: boolean;\n}\n\nexport type SiteData = {\n  footer: any;\n  header: any;\n  locale: string;\n};\n\nexport type ReactStaticRoute = Route & {\n  redirect?: string;\n  sharedData?: string;\n};\n\nexport type PageRouteData = {\n  page: ContentfulEntry;\n  name: string;\n  path: string;\n  locale: string;\n};\n\nexport type RouteDataType = {\n  contentType: string;\n  pageList: Array<PageRouteData>;\n};\n\nexport type RouteGeneratorConfig = {\n  cleanupConfig: CleanupConfig;\n  pages: Array<{\n    contentType: string;\n    parentField?: string;\n    parentPath?: string;\n  }>;\n  defaultLocale: string;\n};\n\nconst TEMPLATES_FOLDER = `src/app/pages/Page_`;\n\nclass RouteGenerator {\n  client;\n\n  config: RouteGeneratorConfig;\n\n  defaultLocale: string;\n\n  locales: string[];\n\n  constructor(client: ContentfulApi) {\n    this.client = client;\n    console.log(':::: Loading config from ./RouteConfig.ts ::::');\n    this.config = RouteConfig;\n  }\n\n  private async routeDataResolver(): Promise<RouteDataType[][]> {\n    this.defaultLocale = await this.client.getLocale();\n    this.locales = await this.client.getLocales();\n\n    const pageList = this.config.pages.map((p) => p.contentType);\n\n    return Promise.all(\n      // for each locale\n      this.locales.map((lang) =>\n        Promise.all(\n          // for each page\n          pageList.map((contentName) =>\n            // make contentful calls to retrieve each page for each locale\n            this.client\n              .setLocale(lang)\n              .getPages(contentName)\n              .then(\n                (query): RouteDataType => ({\n                  contentType: contentName,\n                  pageList: query.items\n                    .map((page) => RouteGenerator.generatePageData(page, lang))\n                    .filter((p) => p && p.path)\n                })\n              )\n          )\n        )\n      )\n    );\n  }\n\n  public static generatePageData(\n    page: any,\n    lang: string\n  ): PageRouteData | undefined {\n    cleanupData(page, lang);\n    let path = resolve(page);\n    if (!path) return undefined;\n    return {\n      page,\n      name: page?.fields?.name,\n      path,\n      locale: lang\n    };\n  }\n\n  async getRoutes(): Promise<Array<ReactStaticRoute>> {\n    /**\n     * [\n     *  {[{contentType, pageList:[]}]}, //en\n     *  {[{contentType, pageList:[]}]}, //fr\n     * ]\n     */\n    const localisedRoutes = await this.routeDataResolver();\n\n    const pathsArray = localisedRoutes.map((routes: RouteDataType[]) => {\n      const articlesAll = routes.find((i) => i.contentType === 'article')\n        ?.pageList;\n\n      const categoriesGrouped = groupByArray(\n        articlesAll,\n        (x) => x.page.fields.category.fields.name\n      );\n\n      return routes.map(({ contentType, pageList }) =>\n        pageList\n          .map((info: PageRouteData) => {\n            let extraData = {};\n\n            const reactStaticRouteData: ReactStaticRoute = {\n              path: info.path,\n              template: `${TEMPLATES_FOLDER}${contentType}`,\n              getData: (): {\n                extraData: string;\n                page: string;\n                locale: string;\n              } => ({\n                page: Flatted.stringify(info.page),\n                extraData: Flatted.stringify(extraData),\n                locale: info.locale\n              })\n            };\n            return reactStaticRouteData;\n          })\n          .filter((e) => e.path)\n      );\n    });\n\n    const pageCollection = flatten(flatten(pathsArray)) as Array<\n      ReactStaticRoute\n    >;\n    console.log('::::::::::Rendering pages:::::::::::');\n    pageCollection.map((i: ReactStaticRoute) => console.log(i.path));\n    console.log('::::::::::::::::::::::::::::::::::::');\n    return pageCollection;\n  }\n\n  async getSiteData() {\n    // -------------------------------Navigation---------------------------\n    const { defaultLocale } = RouteConfig;\n    const locales = await this.client.getLocales();\n\n    const localeSiteData: SiteData[] = await Promise.all(\n      locales.map(async (lang) => {\n        // -------------------------------Header---------------------------\n        this.client.setLocale(lang);\n        const mainNav = await this.client.fetchEntry({\n          content_type: 'header',\n          include: 3,\n          field: 'slug',\n          value: 'main-header'\n        });\n        cleanupData(mainNav, lang);\n        // -------------------------------Footer---------------------------\n\n        this.client.setLocale(lang);\n        const footer = await this.client.fetchEntry({\n          content_type: 'footer',\n          field: 'slug',\n          value: 'main-footer'\n        });\n        cleanupData(footer, lang);\n        // -------------------------------site data---------------------------\n        return {\n          locale: lang,\n          header: mainNav.fields,\n          footer: footer.fields\n        };\n      })\n    );\n\n    return {\n      localeData: {\n        allLocales: locales,\n        defaultLocale,\n        hasMultipleLocales: locales.length > 1\n      },\n      // @ts-ignore\n      siteData: localeSiteData.reduce((a: SiteData, b: SiteData) => {\n        return { [a.locale.toString()]: a, [b.locale.toString()]: b };\n      })\n    };\n  }\n}\n\nconst flatten = (arr) => {\n  // eslint-disable-next-line prefer-spread\n  return [].concat.apply([], arr);\n};\n\nconst groupByArray = (xs, key) => {\n  return xs.reduce(function (rv, x) {\n    let v = key instanceof Function ? key(x) : x[key];\n    let el = rv.find((r) => r && r.key === v);\n    if (el) {\n      el.values.push(x);\n    } else {\n      rv.push({ key: v, values: [x] });\n    }\n    return rv;\n  }, []);\n};\n\nexport default RouteGenerator;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/LinkElement/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Container/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/FilterList/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/pages/ProjectList/ProjectList.tsx",["426"],"import React, {\n  FunctionComponent,\n  useContext,\n  useEffect,\n  useState\n} from 'react';\nimport Container from 'components/Container';\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\nimport { PageProps } from '../PageType';\nimport { useContentfulPages } from 'contentful/FrontendApi';\nimport { resolveLinkInfo } from 'contentful/Resolver';\nimport { LinkType } from 'models';\nimport Card from 'components/Card';\nimport RespImage from 'containers/RespImage';\nimport { toLinkType } from 'elements/Link/Link';\nimport { IProject } from 'contentful/@types/contentful';\nimport { GlobalContext } from '../../containers/Layout/Layout';\nimport { makeClass } from '../../utils';\n\nconst ProjectPage: FunctionComponent<PageProps> = () => {\n  return <ProjectFilterList />;\n};\n\ntype ProjectFilterProps = {\n  technologyFilters?: string[];\n};\n\nexport const ProjectFilterList: FunctionComponent<ProjectFilterProps> = (\n  props\n) => {\n  const pageData = useContentfulPages('project');\n\n  const selected = new Set(props.technologyFilters);\n  const [filteredProjects, setFilteredProjects] = useState<IProject[]>();\n\n  useEffect(() => {\n    const filteredProjects = pageData.pages as IProject[];\n    if (filteredProjects) {\n      if (props.technologyFilters?.length) {\n        setFilteredProjects(\n          filteredProjects\n            .filter((p) => {\n              return p.fields.technologies?.some((t) => selected.has(t));\n            })\n            .sort(() => Math.random() - 0.5)\n        );\n      } else {\n        setFilteredProjects(filteredProjects);\n      }\n    }\n  }, [props.technologyFilters, pageData]);\n\n  return (\n    <div className='d-project-block'>\n      {pageData.finished && (\n        <Container layout='maxWidth'>\n          <SwitchTransition mode='out-in'>\n            <CSSTransition\n              classNames='filter'\n              key={props.technologyFilters?.join(',')}\n              addEndListener={(node, done) => {\n                node.addEventListener('transitionend', done, false);\n              }}\n            >\n              <div className='d-project-grid'>\n                {filteredProjects?.map((article, i) => {\n                  if (!article) return null;\n\n                  const linkInfo = toLinkType(\n                    resolveLinkInfo(article)\n                  ) as LinkType;\n\n                  return <ProjectItem key={i} article={article} />;\n                }) || <small>Projects not found!</small>}\n                {filteredProjects?.length &&\n                  filteredProjects.length % 2 === 1 && (\n                    <div className='d-card-container' />\n                  )}\n              </div>\n            </CSSTransition>\n          </SwitchTransition>\n          <div className='d-project-number'>{filteredProjects?.length}</div>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nlet projectDetail = function () {\n  return (\n    <div>\n      <p>\n        Mercedem aut nummos unde unde extricat, amaras. Etiam habebis sem\n        dicantur magna mollis euismod. Quam diu etiam furor iste tuus nos\n        eludet? Cum ceteris in veneratione tui montes, nascetur mus. Quisque ut\n        dolor gravida, placerat libero vel, euismod. Morbi odio eros, volutpat\n        ut pharetra vitae, lobortis sed nibh.\n      </p>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisici elit, sed eiusmod\n        tempor incidunt ut labore et dolore magna aliqua. Tityre, tu patulae\n        recubans sub tegmine fagi dolor. Ab illo tempore, ab est sed\n        immemorabili. Fictum, deserunt mollit anim laborum astutumque!\n      </p>\n      <p>\n        Prima luce, cum quibus mons aliud consensu ab eo. Quid securi etiam\n        tamquam eu fugiat nulla pariatur. Integer legentibus erat a ante\n        historiarum dapibus. Quam temere in vitiis, legem sancimus haerentia.\n        Phasellus laoreet lorem vel dolor tempus vehicula. Inmensae\n        subtilitatis, obscuris et malesuada fames.\n      </p>\n      no way\n    </div>\n  );\n};\nconst ProjectItem: FunctionComponent<any> = ({ article }) => {\n  const globalContext = useContext(GlobalContext);\n  const [hasHover, setHasHover] = useState<boolean>();\n  return (\n    <div className='d-card-container'>\n      <Card\n        className={makeClass([hasHover && 'has-hover'])}\n        onMouseLeave={() => {\n          if (hasHover) {\n            setHasHover(false);\n          }\n          setTimeout(() => {\n            setHasHover((hov) => {\n              if (hov) return hov;\n              globalContext.hideTooltip();\n            });\n          }, 1000);\n        }}\n        onMouseEnter={(e) => {\n          if (!hasHover) {\n            setHasHover(true);\n          }\n          let target = e.currentTarget.getBoundingClientRect();\n          setTimeout(() => {\n            setHasHover((hov) => {\n              if (!hov) return hov;\n              globalContext.showTooltip({\n                children: projectDetail(),\n                atPosition: [\n                  target.x - target.width / 2 - 16,\n                  target.y + target.height / 2\n                ],\n                style: {\n                  width: '360px'\n                }\n              });\n              return hov;\n            });\n          }, 1000);\n        }}\n        title={article.fields.title}\n        image={\n          <RespImage image={article.fields.image} widthVw={50} widthMax={500} />\n        }\n        tags={article.fields.technologies}\n        // link={linkInfo}\n      />\n    </div>\n  );\n};\n\nexport default ProjectPage;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/environments/environment.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/HeaderContainer/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/CookieBannerContainer/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Button/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Tag/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/index.tsx",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Modal/Modal.tsx",["427"],"import React, { FC, useEffect, useLayoutEffect, useRef } from 'react';\nimport { makeClass } from 'utils/Helpers';\nimport Button from 'elements/Button/';\nimport { IcClose } from 'elements/SvgElements';\nimport Grid from 'components/Grid';\nimport { LinkType } from '../../models';\nimport Link from '../../elements/Link';\n\nexport type ModalProps = {\n  /**\n   * The main title that appears on the top\n   */\n  title?: string;\n  /**\n   * Determines the state of modal\n   * e.g.\n   * `true | false`\n   */\n  open?: boolean;\n  /**\n   * Determines the content of modal\n   * e.g.\n   */\n  children?: JSX.Element | JSX.Element[];\n  /**\n   * Should be provided to have main CTA. `to` can be left undefined for a button onClick\n   */\n  primaryLink?: LinkType;\n  /**\n   * Should be provided to have secondary CTA. `to` can be left undefined for a button onClick\n   */\n  secondaryLink?: LinkType;\n  /**\n   * Event when closeButton is clicked\n   */\n  onClickClose?: () => void | undefined;\n} & React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * Use `Modal` to highlight key info with a predefined status.\n */\nconst Modal: FC<ModalProps> = (props: ModalProps) => {\n  const {\n    open,\n    children,\n    className,\n    onClickClose,\n    title,\n    primaryLink,\n    secondaryLink,\n    ...rest\n  } = props;\n  const classes = makeClass(['d-modal', open && 'active', className]);\n  const ref = useRef<any>();\n\n  return (\n    <div className={classes}>\n      <div className={makeClass(['d-modal__dialog'])} ref={ref} {...rest}>\n        <Button\n          className='d-modal__close'\n          onClick={() => onClickClose && onClickClose()}\n          aria-label='Menu'\n          appearance='secondary'\n          icon={<IcClose />}\n        />\n        <div className='d-modal__body'>\n          <h4 className='d-modal__title'>{title}</h4>\n          <div className='d-modal__content'>{children}</div>\n          <Grid\n            className='d-modal__buttonGroup'\n            template='auto auto'\n            templateMobile='1fr'\n          >\n            {secondaryLink && (\n              <Link\n                {...secondaryLink}\n                appearance={secondaryLink.appearance || 'secondary'}\n              />\n            )}\n            {primaryLink && (\n              <Link\n                {...primaryLink}\n                appearance={primaryLink.appearance || 'primary'}\n              />\n            )}\n          </Grid>\n        </div>\n      </div>\n      <div\n        className='d-modal__underlay'\n        onClick={() => onClickClose && onClickClose()}\n      />\n    </div>\n  );\n};\n\nModal.displayName = 'Modal';\nModal.defaultProps = {\n  open: false\n};\n\nexport default Modal;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/RouteConfig.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/EntryCleaner.ts",["428","429","430","431","432","433","434"],"import { getContentType, getPageType } from './Resolver';\nimport RouteConfig from './RouteConfig';\n\nexport function handleContent(contentItem, handlers) {\n  const contentType = getContentType(contentItem);\n  if (contentType) {\n    const handler = handlers[contentType];\n    if (handler) {\n      handler(contentItem);\n      return;\n    }\n  }\n  defaultHandler(contentItem);\n}\n\nexport function defaultHandler(node) {\n  delete node.sys;\n  return node;\n}\n\nexport type CleanupConfig = {\n  handlers: Record<string, any>;\n  ignoreProps: Array<string>;\n  ignoreTypes: Array<string>;\n};\n\nfunction cleanupEntryLink(object) {\n  const type = getContentType(object);\n  if (type) {\n    if (Array.isArray(object)) {\n      return object.filter((element) => cleanupEntryLink(element));\n    }\n  }\n  return object;\n}\n\nexport function cleanupData(data, locale?: string, withHandler?: boolean) {\n  const config = RouteConfig.cleanupConfig;\n\n  const stack: any[] = [];\n  const processed: any[] = [];\n  let localContentData = { ...data };\n  stack.push(localContentData);\n\n  while (stack.length > 0) {\n    const item: any = stack.pop();\n    if (item && processed.indexOf(item) !== -1) {\n      continue;\n    }\n\n    processed.push(item);\n\n    // --------------------------------------------------\n    const contentType = getContentType(item);\n\n    // embeds contentType inside item as sys is removed from data in frontend\n    if (contentType) {\n      item.type = contentType;\n    }\n\n    // embeds locale inside item info to be used by resolve methods on frontend\n    if (contentType && getPageType(contentType) && locale) {\n      item.locale = locale;\n      if (typeof item.sys === 'object') {\n        item.sys.locale = locale;\n      }\n    }\n\n    for (const prop in item) {\n      // for each key in item. (e.g, [sys, fields, title, name]\n\n      if (item.hasOwnProperty(prop) && !config.ignoreProps.includes(prop)) {\n        // if is a valid key\n\n        if (prop == null || prop === 'locale') continue;\n\n        if (typeof item[prop] === 'object') {\n          // if is a bigger object (e.g. [fields, link]\n\n          item[prop] = cleanupEntryLink(item[prop]);\n\n          let overwriteField = item[prop].overwrite;\n          if (overwriteField) {\n            item[overwriteField] = item[prop].value;\n          }\n\n          if (typeof item[prop] === 'object') stack.push(item[prop]);\n        }\n      }\n    }\n\n    if (\n      withHandler &&\n      contentType &&\n      !config.ignoreTypes.includes(contentType)\n    ) {\n      handleContent(item, config.handlers);\n    }\n  }\n\n  if (!withHandler) {\n    cleanupData(localContentData, locale, true);\n  }\n\n  // finally clean bigger objected like link\n  Object.assign(data, localContentData);\n}\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/FilterList/FilterListUtils.ts",["435","436","437"],"import MockFilter from '../../mocks/mock-filters.json';\n\nexport type FilterItem = {\n  name: string[];\n  title: string;\n  size?: number;\n  align?: 'left' | 'center' | 'right' | string;\n  alignVal?: string;\n};\n\nexport const filterNameSeparator = '|';\nexport const filterDataSeparator = '#';\n\n/**\n *\n * @param filtersList\n */\nexport const getFilteredList = (filtersList?: string[]) => {\n  const filterList: FilterItem[] =\n    filtersList?.map((f) => parseFilterData(f)) || [];\n  return filterList;\n};\n\nexport const getNameList = (name: string) => name.split('|');\n\nlet parseFilterData = (filterString: string): FilterItem => {\n  let split = filterString.split(filterDataSeparator);\n  return {\n    name: getNameList(split[0]),\n    title: (split[1] || getNameList(split[0])[0]).toUpperCase(),\n    size: parseFloat(split[2]) || 1,\n    align: split[3]?.split(':')[0],\n    alignVal: split[3]?.split(':')[1]\n  };\n};\n\nexport const getMockFilterList = () => MockFilter;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/LinkElement/LinkElement.tsx",["438"],"import React, { FC } from 'react';\nimport { makeClass } from 'utils/Helpers';\nimport Link from 'elements/Link';\nimport { GenericProps, LinkData } from '../../models';\nimport { toLinkType } from '../../elements/Link/Link';\n\n/**\n * The `LinkElement` component example.\n * @param props\n * @constructor\n */\nconst LinkElement: FC<LinkData & GenericProps> = (props) => {\n  const classes = makeClass(['d-LinkElement']);\n  return (\n    <Link className={classes} {...toLinkType(props)}>\n      {props.children}\n    </Link>\n  );\n};\n\nexport default LinkElement;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Container/Container.tsx",["439"],"import React, { FC } from 'react';\nimport { makeClass } from 'utils/Helpers';\nimport FadeOnScroll from '../Fadeup/Fadeup';\n\nexport type ContainerProps = {\n  children: React.ReactNode;\n  /**\n   * Sets padding on this container as defined in css's `--gap-layout` variable.\n   * This changes accordingly depending on device width.\n   * `'All' | 'Vertical' | 'Horizontal' | 'Bottom' | 'Top'`\n   */\n  pad?: 'All' | 'Vertical' | 'Horizontal' | 'Bottom' | 'Top';\n  /**\n   * `'maxWidth' | 'columns' | 'centered' | 'maxWidthNarrow'`\n   */\n  layout?: 'maxWidth' | 'columns' | 'centered' | 'maxWidthNarrow';\n  /**\n   * `'dark' | 'light' | 'default' | 'none'`\n   */\n  theme?: 'dark' | 'light' | 'default' | 'none';\n  /**\n   * Whether this container should only show on given breakpoint\n   * `'Desktop' | 'Tablet' | 'Mobile'`.\n   * Note that Tablet will also cover Mobile.\n   */\n  breakpoint?: 'All' | 'Desktop' | 'Tablet' | 'Mobile' | 'Non-Desktop';\n  /**\n   * Sets a `background-$background` classname on this container\n   * e.g. `.background-primary`\n   */\n  background?: string;\n  /**\n   * Whether this container should animate with fadein affect when in view\n   */\n  animateIn?: boolean;\n  /**\n   * Can be used to animate containers at a later time. For example cards in a sequence.\n   */\n  animateNow?: boolean;\n  /**\n   * @param isVisible boolean\n   * @returns void\n   */\n  onVisible?: (isVisible: boolean) => void;\n  /**\n   * When used with `layout: columns`, this disables breaking on Mobile\n   */\n  responsiveColumn?: boolean;\n} & React.HTMLAttributes<any>;\n\nconst Container: FC<ContainerProps> = (props: ContainerProps) => {\n  const {\n    pad,\n    breakpoint,\n    animateIn,\n    animateNow,\n    layout,\n    onVisible,\n    background,\n    theme,\n    responsiveColumn,\n    ...rest\n  } = props;\n\n  const classNames = makeClass([\n    props.className,\n    'd-container',\n    pad && `pad-${pad}`,\n    layout && `layout-${layout}`,\n    breakpoint && `breakpoint-${breakpoint}`,\n    background && `background-${background}`,\n    animateIn && 'fadeup-initial',\n    responsiveColumn === false && `layout-column-noMobile`\n  ]);\n\n  const containerDom = (\n    <section data-theme={theme || 'default'} {...rest} className={classNames}>\n      {props.children}\n    </section>\n  );\n\n  if (!(animateIn === true || animateNow === true)) {\n    return containerDom;\n  }\n\n  return (\n    <FadeOnScroll\n      animate={animateIn}\n      uniqueKey={`${classNames}-${props.id}`}\n      onVisible={onVisible}\n      enter={animateNow}\n    >\n      {containerDom}\n    </FadeOnScroll>\n  );\n};\n\nexport default Container;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/FilterList/FilterList.tsx",["440","441"],"import React, { FC, useEffect, useState } from 'react';\nimport { makeClass, setCSSVar } from 'utils/Helpers';\nimport Form from '../../components/Form';\nimport Input from '../../elements/Input';\nimport { InputType } from '../../elements/Input/Input';\nimport { FilterItem, getNameList } from './FilterListUtils';\n\nexport type FilterListProps = {\n  filterList: FilterItem[];\n  selected?: (list: string[]) => void;\n} & React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * The `FilterList` component example.\n * @param props\n * @constructor\n */\nconst FilterList: FC<FilterListProps> = (props: FilterListProps) => {\n  const classes = makeClass(['d-FilterList', props.className]);\n  return (\n    <div className={classes}>\n      <div className='d-filter-stick'>\n        <Form\n          submitButtonText={null}\n          onAllChange={(data) => {\n            let selectedFilterNames: string[] = [];\n            Object.keys(data).map((n) => {\n              selectedFilterNames = selectedFilterNames.concat(getNameList(n));\n            });\n            props.selected && props.selected(selectedFilterNames);\n          }}\n        >\n          {props.filterList.map((f, i) => (\n            <FilterSelector key={i} {...f} />\n          ))}\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nlet FilterSelector = (props: FilterItem & { selected?: boolean }) => {\n  const [isSelected, setSelected] = useState(props.selected || false);\n  const [isMouseOver, setMouseOver] = useState(false);\n\n  useEffect(() => {\n    setMouseOver(true);\n  }, [isSelected]);\n\n  return (\n    <div\n      className={makeClass([\n        'd-filter-item',\n        isSelected && 'filter-selected',\n        isMouseOver && 'filter-over'\n      ])}\n      style={setCSSVar({\n        '--filter-size': props.size,\n        '--filter-align': props.align,\n        '--filter-alignVal': props.alignVal\n      })}\n      // onMouseEnter={()}\n      onMouseLeave={() => {\n        setMouseOver(false);\n      }}\n    >\n      <Input\n        type={InputType.checkboxInvisible}\n        name={props.name.join('|')}\n        label={props.title}\n        onChange={(e) => {\n          const val = e.target.checked;\n          setSelected(val);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default FilterList;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/HeaderContainer/HeaderContainer.tsx",["442","443"],"import React, { FC } from 'react';\nimport Header from '../../components/Header';\n\ntype HeaderContainerProps = {} & React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * The `HeaderContainer` component example.\n * @param props\n * @constructor\n */\nconst HeaderContainer: FC<HeaderContainerProps> = (\n  props: HeaderContainerProps\n) => {\n  return <Header />;\n};\n\nexport default HeaderContainer;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/CookieBannerContainer/CookieBannerContainer.tsx",["444"],"import React, { FC } from 'react';\nimport CookieBanner from '../../components/CookieBanner';\n\ntype CookieBannerContainerProps = {\n  /**\n   * Description above title\n   */\n  title?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * The `CookieBannerContainer` component example.\n * @param props\n * @constructor\n */\nconst CookieBannerContainer: FC<CookieBannerContainerProps> = (\n  props: CookieBannerContainerProps\n) => {\n  return <CookieBanner />;\n};\n\nexport default CookieBannerContainer;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Tag/Tag.tsx",["445"],"import React, { FC } from 'react';\nimport { makeClass } from 'utils/Helpers';\n\ntype TagProps = {\n  /**\n   * Description above title\n   */\n  title?: string;\n  /**\n   * Appearance `block | raised | none`\n   */\n  appearance?: 'block' | 'raised' | 'none';\n} & React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * The `Tag` component example.\n * @param props\n * @constructor\n */\nconst Tag: FC<TagProps> = (props: TagProps) => {\n  const classes = makeClass([\n    'd-Tag',\n    props.className,\n    `appearance-${props.appearance}`\n  ]);\n  return (\n    <span className={classes} title={props.title}>\n      {props.title || props.children}\n    </span>\n  );\n};\n\nTag.defaultProps = {\n  appearance: 'none'\n};\n\nexport default Tag;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Button/Button.tsx",["446"],"import React, { FC } from 'react';\nimport { makeClass } from 'utils/Helpers';\nimport Spinner from 'elements/Loaders';\n\nexport type ButtonProps = {\n  /**\n   * This will replace children if provided\n   */\n  title?: string;\n  /**\n   * One of 'primary' | 'secondary'\n   */\n  appearance?: 'primary' | 'secondary';\n  /**\n   * Displays icon on the right with text. Center without.\n   */\n  icon?: JSX.Element;\n  /**\n   * Add this prop for a loading indicator\n   */\n  isLoading?: boolean;\n  /**\n   * If the parent element should be a `<button>` or `<div>`\n   */\n  asDiv?: boolean;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\n/**\n * Use `Button` to highlight key info with a predefined status.\n */\nconst Button: FC<ButtonProps> = (props: ButtonProps) => {\n  const { appearance, isLoading, asDiv, title, icon, ...rest } = props;\n\n  const classes = makeClass([\n    props.className,\n    'd-button',\n    appearance,\n    props.disabled && 'disabled',\n    icon && 'icon-primary',\n    icon && (props.children || props.title) && 'icon-primary-inline',\n    isLoading && !icon && !props.disabled && 'icon-secondary',\n    !icon && isLoading && 'icon-secondary-show'\n  ]);\n\n  return React.createElement(\n    asDiv ? 'div' : 'button',\n    { className: classes, ...rest },\n    <React.Fragment>\n      {props.children || props.title}\n      {isLoading && (\n        <i className='d-button-icon'>\n          <Spinner type='gg-spinner' />\n        </i>\n      )}\n      {icon && <i className='d-button-icon'>{icon}</i>}\n    </React.Fragment>\n  );\n};\n\nButton.displayName = 'Button';\nButton.defaultProps = {\n  appearance: 'primary'\n};\nexport default Button;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcAdd.tsx",["447","448"],"import * as React from 'react';\n\nconst SvgIcAdd = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12zm10-8a8 8 0 100 16 8 8 0 000-16z'\n      fill='currentColor'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M13 7a1 1 0 10-2 0v4H7a1 1 0 100 2h4v4a1 1 0 102 0v-4h4a1 1 0 100-2h-4V7z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcAdd;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcArrowRight.tsx",["449","450"],"import * as React from 'react';\n\nconst SvgIcArrowRight = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path\n      d='M15.038 6.343l-1.411 1.418 3.27 3.255-13.605.013.002 2 13.568-.013-3.215 3.23 1.417 1.41 5.644-5.67-5.67-5.643z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcArrowRight;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcArrowLeft.tsx",["451","452"],"import * as React from 'react';\n\nconst SvgIcArrowLeft = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path\n      d='M20.328 11v2H7.5l3.243 3.243-1.415 1.414L3.672 12l5.656-5.657 1.415 1.414L7.5 11h12.828z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcArrowLeft;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcEyeAlt.tsx",["453","454"],"import * as React from 'react';\n\nconst SvgIcEyeAlt = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path d='M14 12a2 2 0 11-4 0 2 2 0 014 0z' fill='currentColor' />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M12 3C6.408 3 1.71 6.824.378 12 1.71 17.176 6.408 21 12 21c5.591 0 10.29-3.824 11.622-9C22.29 6.824 17.592 3 12 3zm4 9a4 4 0 11-8 0 4 4 0 018 0z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcEyeAlt;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcEye.tsx",["455","456"],"import * as React from 'react';\n\nconst SvgIcEye = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M16 12a4 4 0 11-8 0 4 4 0 018 0zm-2 0a2 2 0 11-4 0 2 2 0 014 0z'\n      fill='currentColor'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M12 3c5.591 0 10.29 3.824 11.622 9-1.332 5.176-6.03 9-11.622 9S1.71 17.176.378 12C1.71 6.824 6.408 3 12 3zm0 16c-4.476 0-8.269-2.942-9.543-7C3.731 7.942 7.524 5 12 5c4.476 0 8.269 2.942 9.543 7-1.274 4.058-5.067 7-9.543 7z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcEye;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcClose.tsx",["457","458"],"import * as React from 'react';\n\nconst SvgIcClose = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path\n      d='M6.225 4.811a1 1 0 00-1.414 1.414L10.586 12 4.81 17.775a1 1 0 101.414 1.414L12 13.414l5.775 5.775a1 1 0 001.414-1.414L13.414 12l5.775-5.775a1 1 0 00-1.414-1.414L12 10.586 6.225 4.81z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcClose;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcArrowTopright.tsx",["459","460"],"import * as React from 'react';\n\nconst SvgIcArrowTopright = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path\n      d='M14 13.963h2v-6h-6v2h2.586l-5.33 5.33 1.414 1.414 5.33-5.33v2.586z'\n      fill='currentColor'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M23 19a4 4 0 01-4 4H5a4 4 0 01-4-4V5a4 4 0 014-4h14a4 4 0 014 4v14zm-4 2H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcArrowTopright;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcDanger.tsx",["461","462"],"import * as React from 'react';\n\nconst SvgIcDanger = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path\n      d='M12 6a1 1 0 011 1v6a1 1 0 11-2 0V7a1 1 0 011-1zM12 16a1 1 0 100 2 1 1 0 000-2z'\n      fill='currentColor'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM4 12a8 8 0 1016 0 8 8 0 00-16 0z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcDanger;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcLock.tsx",["463","464"],"import * as React from 'react';\n\nconst SvgIcLock = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M18 10.5a3 3 0 013 3v6a3 3 0 01-3 3H6a3 3 0 01-3-3v-6a3 3 0 013-3v-3a6 6 0 1112 0v3zm-6-7a4 4 0 014 4v3H8v-3a4 4 0 014-4zm6 9H6a1 1 0 00-1 1v6a1 1 0 001 1h12a1 1 0 001-1v-6a1 1 0 00-1-1z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcLock;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/SvgElements/IcMenu.tsx",["465","466"],"import * as React from 'react';\n\nconst SvgIcMenu = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox='0 0 24 24' fill='currentColor' {...props}>\n    <path\n      d='M2 6a1 1 0 011-1h18a1 1 0 110 2H3a1 1 0 01-1-1zM2 12.032a1 1 0 011-1h18a1 1 0 110 2H3a1 1 0 01-1-1zM3 17.064a1 1 0 100 2h18a1 1 0 000-2H3z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nexport default SvgIcMenu;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/utils/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/RichText/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/contentful/handlers/LinkHandler.ts",["467","468"],"import { resolveLinkInfo } from '../Resolver';\n\nexport const linkHandler = (link) => {\n  Object.assign(link, resolveLinkInfo(link));\n  delete link.fields;\n  delete link.sys;\n  return link;\n};\n\nexport default linkHandler;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/RespImage/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Link/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Link/Link.tsx",["469"],"import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeClass } from 'utils/Helpers';\nimport Button from '../Button';\nimport { ButtonProps } from '../Button/Button';\nimport { LinkData } from '../../models';\n\nexport type LinkTypeLocal = {\n  /**\n   * Determines the title if provided\n   */\n  title?: string;\n  /**\n   * Determines the href of link\n   */\n  to: string;\n  /**\n   * Determines the internal/external of link\n   */\n  newTab?: boolean;\n  /**\n   * useful if you want to use React Router's or React-static `Link` library.\n   * e.g.\n   * ```\n   * import { Link as RouterLink} from \"react-router-dom\";\n   * ...\n   * <Link provider={<RouterLink/>} to='/about' />\n   * ```\n   */\n  provider?: JSX.Element;\n};\n\ntype LinkProps = ButtonProps & LinkTypeLocal;\n\n/**\n * `Link` is a wrapper around button to that provides page navigation\n */\nconst Link: FC<LinkProps> = (props: LinkProps) => {\n  const { to, appearance, newTab, title, provider, ...rest } = props;\n  const className = makeClass(['d-link']);\n\n  const mainChildren =\n    appearance === undefined ? (\n      props.children\n    ) : (\n      <Button appearance={appearance} {...rest}>\n        {props.children || title}\n      </Button>\n    );\n\n  if (provider && !newTab) {\n    return React.cloneElement(\n      provider,\n      {\n        className,\n        to,\n        ...rest\n      },\n      mainChildren || props.title\n    );\n  }\n\n  return React.createElement(\n    'a',\n    {\n      className,\n      href: to,\n      target: newTab ? '_blank' : '_self',\n      ...rest\n    },\n    mainChildren || props.title\n  );\n};\n\nLink.displayName = 'Link';\n// TODO change this link if using a different router\nLink.defaultProps = {\n  // provider: <RouterLink/>\n};\nexport default Link;\n\nexport const toLinkType = (linkData?: LinkData | null): any | undefined => {\n  if (!linkData) return undefined;\n  return {\n    to: linkData.path,\n    title: linkData.title,\n    newTab: linkData.newTab,\n    provider: <RouterLink />\n  };\n};\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Input/Input.tsx",["470","471","472","473","474","475","476"],"import React, { FormEvent } from 'react';\nimport InputMask from 'react-input-mask';\nimport { FormState, FormValidationContext } from 'components/Form/Form';\nimport { makeClass } from 'utils/Helpers';\n\ntype InputStateType = {\n  error?: ErrorGroup;\n  value?: InputProps['value'];\n  propError?: ErrorGroup;\n};\n\nexport enum InputType {\n  text = 'text',\n  textarea = 'textarea',\n  number = 'number',\n  email = 'email',\n  password = 'password',\n  splitText = 'splitText',\n  checkbox = 'checkbox',\n  checkboxInvisible = 'checkbox-invisible',\n  toggle = 'toggle'\n}\n\ninterface InputMaskProps {\n  /**\n   * When used with type=`splitText`, determines the input format.\n   * e.g. XY99 9999 to allow `XY## ###` values.\n   * <br/>\n   * `9`: `0-9`\n   * <br/>\n   * `a`: `A-Z, a-z`\n   * <br/>\n   * `*`: `A-Z, a-z, 0-9`\n   * <br/>\n   * It is advised to also pass the `pattern` props with the appropriate\n   * regex so invalid errors can be handled appropriately\n   */\n  mask?: string | Array<string | RegExp>;\n}\n\n/**\n * Specifies the main error type used within forms and inputs\n */\ninterface ErrorGroup {\n  error: boolean;\n  errorText?: string;\n}\n\ninterface DefaultProps {\n  type: InputType;\n  /**\n   * The name attrribute of the input\n   */\n  name: string;\n  /**\n   * Determines the main placeholder and label\n   */\n  label: string;\n  /**\n   * The default pre-populated value of the input\n   */\n  id?: string;\n  /**\n   * Must be one of the supported input types:\n   */\n  value?: string;\n  /**\n   * Appears below the input\n   */\n  description?: string;\n}\n\ninterface ErrorProps {\n  /**\n   * The error thrown when a required input has been left empty\n   */\n  emptyError?: string;\n  /**\n   * The error thrown when the input is not in the correct format.\n   * e.g. an email input with invalid email value.\n   */\n\n  invalidError?: string;\n  /**\n   * Programatically set error on input with this.\n   * e.g. the form returns result back with error on this input.\n   */\n  error?: ErrorGroup;\n  /**\n   * Called when the input value is invalid\n   */\n  onInvalid?: (event: FormEvent<any>) => void;\n  /**\n   * Programatically set validity of input on change.\n   */\n  setValidity?: (e: any) => boolean;\n}\n\ntype VisualProps = {\n  /**\n   * An element to be placed on the end of input. This is clickable.\n   */\n  icon?: JSX.Element;\n  /**\n   * Click event for icons\n   * @param val\n   */\n  onIconClick?: (val?: string) => void;\n};\n\nexport type InputProps = DefaultProps &\n  ErrorProps &\n  InputMaskProps &\n  VisualProps &\n  React.InputHTMLAttributes<any>;\n\nclass Input extends React.Component<InputProps, InputStateType> {\n  static contextType = FormValidationContext;\n\n  public state = {\n    error: this.props.error,\n    value: this.props.value,\n    propError: this.props.error\n  };\n\n  private inputObj: React.RefObject<any>;\n\n  constructor(props: any) {\n    super(props);\n    this.inputObj = React.createRef();\n  }\n\n  /**\n   * Allows input to accept new props but then modify it internally using states\n   * @param nextProps\n   * @param prevState\n   */\n  static getDerivedStateFromProps(\n    nextProps: any,\n    prevState: any\n  ): InputStateType {\n    if (nextProps.error !== prevState.propError) {\n      return { propError: nextProps.error, error: nextProps.error };\n    }\n    // If value is provided initially, allow users to edit them\n    if (\n      nextProps.value &&\n      prevState.value === undefined &&\n      nextProps.value !== prevState.value\n    ) {\n      return { value: nextProps.value };\n    }\n    return {};\n  }\n\n  /**\n   *\n   * @param e\n   */\n  onInvalid(e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void {\n    e.preventDefault();\n    const { value } = this.state;\n    this.setInvalid({\n      error: true,\n      errorText:\n        (this.state.error && this.state.error.errorText) ||\n        (!this.checkEmptyValidity(value) && this.props.emptyError) ||\n        (this.state.error && this.props.invalidError)\n    });\n    this.props.onInvalid && this.props.onInvalid(e);\n  }\n\n  onChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void {\n    const { target } = e;\n    const { value } = target;\n    const errorItem: ErrorGroup = { error: false, errorText: undefined };\n\n    // backspace to nothing should show error again\n    if (!this.checkEmptyValidity(value)) {\n      errorItem.error = true;\n      errorItem.errorText = this.props.emptyError;\n    }\n\n    if (!errorItem.error) {\n      target.setCustomValidity('');\n    }\n\n    if (this.props.setValidity) {\n      const isValid = this.props.setValidity(value);\n      if (isValid) {\n        target.setCustomValidity('Error');\n      }\n    }\n    this.setInvalid(errorItem);\n    this.setState({ value });\n    this.props.onChange && this.props.onChange(e);\n  }\n\n  onIconClick(): void {\n    this.props.onIconClick && this.props.onIconClick(this.state.value);\n  }\n\n  componentDidUpdate(): void {\n    // const hasError = this.state.error && this.state.error.error;\n    // this.sendInputInValid(Boolean(hasError));\n  }\n\n  componentDidMount(): void {\n    const initialValidity = this.checkEmptyValidity(this.props.value);\n    this.sendInputInValid(!initialValidity);\n  }\n\n  render(): React.ReactNode {\n    const {\n      name,\n      error,\n      value,\n      label,\n      emptyError,\n      invalidError,\n      description,\n      mask,\n      icon,\n      setValidity,\n      onIconClick,\n      ...rest\n    } = this.props;\n    if (this.props.type === InputType.splitText && this.props.mask) {\n      return (\n        <InputFieldGroup\n          {...this.props}\n          error={this.state.error}\n          onIconClick={this.onIconClick.bind(this)}\n        >\n          <InputMask\n            {...rest}\n            type='text'\n            name={this.props.name}\n            id={this.props.name}\n            ref={this.inputObj}\n            placeholder={this.props.placeholder || ' '}\n            mask={this.props.mask}\n            maskChar=''\n            value={this.state.value}\n            onChange={this.onChange.bind(this)}\n            onInvalid={this.onInvalid.bind(this)}\n          />\n        </InputFieldGroup>\n      );\n    }\n    if (\n      this.props.type === InputType.checkbox ||\n      this.props.type === InputType.toggle ||\n      this.props.type === InputType.checkboxInvisible\n    ) {\n      const className = makeClass([\n        this.props.type === InputType.checkbox && 'switch-checkbox-root',\n        this.props.type === InputType.toggle && 'switch-toggle-root',\n        this.props.type === InputType.checkboxInvisible &&\n          'switch-invisible-root'\n      ]);\n\n      return (\n        <InputFieldGroup\n          {...this.props}\n          error={this.state.error}\n          onIconClick={this.onIconClick.bind(this)}\n          label=''\n        >\n          <div className={className}>\n            <label className='switch'>\n              {this.props.label}\n              <input\n                {...rest}\n                type='checkbox'\n                id={this.props.name}\n                name={this.props.name}\n                onChange={this.onChange.bind(this)}\n                onInvalid={this.onInvalid.bind(this)}\n              />\n              <span className='slider round' />\n            </label>\n          </div>\n        </InputFieldGroup>\n      );\n    }\n    if (this.props.type === InputType.textarea) {\n      return (\n        <InputFieldGroup\n          {...this.props}\n          error={this.state.error}\n          onIconClick={this.onIconClick.bind(this)}\n        >\n          <textarea\n            {...rest}\n            id={this.props.name}\n            name={this.props.name}\n            onChange={this.onChange.bind(this)}\n            onInvalid={this.onInvalid.bind(this)}\n          />\n        </InputFieldGroup>\n      );\n    }\n    return (\n      <InputFieldGroup\n        {...this.props}\n        error={this.state.error}\n        onIconClick={this.onIconClick.bind(this)}\n      >\n        <input\n          ref={this.inputObj}\n          placeholder={this.props.placeholder || ' '}\n          onChange={this.onChange.bind(this)}\n          value={this.state.value}\n          id={this.props.name}\n          name={this.props.name}\n          {...rest}\n          onInvalid={this.onInvalid.bind(this)}\n        />\n      </InputFieldGroup>\n    );\n  }\n\n  private checkEmptyValidity(value?: string): boolean {\n    const hasValue = value && value.replace(/-/gi, '').trim().length !== 0;\n    const isRequired = this.props.required;\n    const isValid = !isRequired || (isRequired && hasValue);\n    return !!isValid;\n  }\n\n  private setInvalid(errorItem: ErrorGroup): void {\n    this.sendInputInValid(errorItem.error);\n    this.setState({ error: errorItem });\n  }\n\n  private sendInputInValid = (hasError: boolean): void => {\n    const formValidation = this.getFormContext();\n    if (formValidation.setInputValidity) {\n      formValidation.setInputValidity(this.props.name, hasError);\n    }\n  };\n\n  private getFormContext(): FormState {\n    return this.context as FormState;\n  }\n}\n\nfunction InputFieldGroup(props: InputProps): JSX.Element {\n  const hasError = props.error?.error;\n\n  const classNamesList = makeClass([\n    'field',\n    props.type && `input-${props.type}`,\n    hasError && 'error error-input-anim',\n    props.disabled && 'input-disabled',\n    props.icon && 'input-has-icon'\n  ]);\n\n  return (\n    <div className={classNamesList}>\n      {props.icon ? (\n        <span\n          className='input-icon'\n          onClick={(): void => {\n            props.onIconClick && props.onIconClick(props.value);\n          }}\n        >\n          {props.icon}\n        </span>\n      ) : null}\n      <div className={`field-description ${props.type}`}>\n        <div className='tiny'>{props.description}</div>\n\n        {hasError && (\n          <div className='error-root'>\n            <small className='error'>\n              {props.error?.errorText || props.invalidError}\n            </small>\n          </div>\n        )}\n      </div>\n\n      {props.children}\n\n      {props.label.length > 0 && (\n        <label htmlFor={props.name}>{props.label}</label>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Fadeup/Fadeup.tsx",["477","478"],"import React, { useState } from 'react';\nimport OnVisible, { setDefaultProps } from 'react-on-visible';\nimport { CSSTransition } from 'react-transition-group';\nimport { GenericProps } from '../../models';\n\nsetDefaultProps({\n  bounce: false,\n  visibleClassName: 'fadeup-visible',\n  percent: 5\n});\n\ntype FadeOnScrollType = {\n  uniqueKey?: string;\n  animate?: boolean;\n  children: React.ReactNode;\n  enter?: boolean;\n  onVisible?: (hasEntered: boolean) => void;\n  transitionProps?: any;\n  animationClass?: string;\n} & GenericProps;\n\nconst FadeOnScroll = (props: FadeOnScrollType) => {\n  const [isVisible, setVisible] = useState(false);\n\n  const uniqKey = props.uniqueKey || '-no-key';\n  return (\n    <OnVisible\n      onChange={(val: boolean) => {\n        setVisible(val);\n        props.onVisible && props.onVisible(false);\n      }}\n    >\n      <CSSTransition\n        in={props.enter === undefined ? isVisible : isVisible && props.enter}\n        appear\n        classNames={props.animationClass || 'fadeup'}\n        key={uniqKey}\n        onEntered={() => {\n          props.onVisible && props.onVisible(true);\n        }}\n        timeout={150}\n        {...props.transitionProps}\n      >\n        {props.children}\n      </CSSTransition>\n    </OnVisible>\n  );\n};\n\nFadeOnScroll.defaultProps = {\n  animateClass: 'fadeup'\n};\n\nexport default FadeOnScroll;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/utils/Device.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Card/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Input/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Form/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Grid/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/CookieBanner/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/containers/RespImage/RespImage.tsx",["479","480","481","482"],"import React from 'react';\n\nconst createSrcSetEntry = (url, width, extraParams = '') =>\n  `${url}?q=85&w=${width}${extraParams}`;\n\nexport const getUrl = (image, width = '1440', extraParams = undefined) =>\n  `${createSrcSetEntry(image.fields.file.url, width, extraParams)}`;\n\ntype RespImageType = {\n  /**\n   * Contentful image object\n   */\n  image?: any;\n  imageUrl?: string;\n  /**\n   * in pixels\n   */\n  widthMax?: number;\n  widthVw?: number;\n};\n\nconst RespImage = ({\n  image = undefined,\n  imageUrl = undefined,\n  widthMax = 1440,\n  widthVw = 100\n}: RespImageType) => {\n  if (!imageUrl && !image?.fields.file.url) return null;\n\n  const url = imageUrl || image.fields.file.url;\n  const srcsets = [400, 800, 1440, 1920].map((width) => {\n    return createSrcSetEntry(url, width, ` ${width}w`);\n  });\n  return (\n    <img\n      className='d-image'\n      src={url}\n      srcSet={srcsets.join(', ')}\n      sizes={`(max-width: ${widthMax}px) ${widthVw}vw, ${widthMax}px`}\n      alt={\n        (image && (image.fields.description || image.fields.title)) || imageUrl\n      }\n    />\n  );\n};\n\nexport default RespImage;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Card/Card.tsx",["483"],"import React, { FC } from 'react';\nimport { makeClass } from 'utils/Helpers';\nimport Grid from 'components/Grid';\nimport Link from 'elements/Link';\nimport { GenericProps, LinkType } from '../../models';\nimport Tag from '../../elements/Tag';\n\nexport type CardType = {\n  /**\n   * Determines the title if provided\n   */\n  title?: string;\n  /**\n   * Determines the secondary title if provided\n   */\n  subTitle?: string;\n  /**\n   * List of tags\n   */\n  tags?: string[];\n  /**\n   * useful if you want to use markup in the description like bold, italics, etc.\n   * e.g.\n   * ```\n   * <p>Use <strong>Love2Shop</strong> digital reward codes to shop with some of the UK’s leading brands.</p>\n   * ```\n   */\n  description?: JSX.Element | string;\n  /**\n   * Determines the footnote if provided\n   */\n  footnote?: string;\n  link?: LinkType;\n  /**\n   * Image that will be provided with markup from contentful.\n   * e.g.\n   * ```\n   * <div className='d-image'><img src='https://via.placeholder.com/450x250' alt='Alt Text' /></div>\n   * ```\n   */\n  image?: JSX.Element;\n} & React.HTMLAttributes<HTMLDivElement>;\n\ntype CardProps = CardType;\n\n/**\n * The `Card` component example.\n * @param props\n * @constructor\n */\nconst Card: FC<CardProps> = (props: CardProps) => {\n  const {\n    title,\n    subTitle,\n    description,\n    link,\n    tags,\n    footnote,\n    image,\n    className,\n    ...rest\n  } = props;\n\n  const classes = makeClass(['d-card', className]);\n  const template = footnote ? '1fr 1fr' : '2fr';\n  return (\n    <div className={classes} {...rest}>\n      {image && <div className='d-card__image'>{image}</div>}\n      <div className='d-card__body'>\n        <div className='d-card__header'>\n          {title && <h3 className='d-card__title'>{title}</h3>}\n          {subTitle && <h5 className='d-card__subtitle'>{subTitle}</h5>}\n          {tags && (\n            <div className='d-card-tags d-Tag-container'>\n              {tags.map((tag, i) => (\n                <Tag key={i} title={tag} appearance='raised' />\n              ))}\n            </div>\n          )}\n        </div>\n\n        {description && (\n          <div className='d-card__description'>\n            <small>{description}</small>\n          </div>\n        )}\n\n        {link && (\n          <Link to='' {...link}>\n            <h3 className='d-card__title'>{title}</h3>\n          </Link>\n        )}\n\n        <Grid template={template}>\n          <small className='d-card__footnote'>\n            <strong>{footnote}</strong>\n          </small>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Loaders/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Form/Form.tsx",["484","485","486","487","488","489","490","491"],"import * as React from 'react';\nimport Button from 'elements/Button/Button';\n\nexport type FormProps = {\n  /**\n   * Return a promise. While the promise is in progress,\n   * a loader will be shown and the form will be disabled.\n   * If an error is thrown, the string message in Error(mymsg) will be shown under the form.\n   * @param json : data of inputs as a json\n   * @param e : e.target to get Form.\n   * @return Promise<any>\n   */\n  onSubmit?: (\n    json: object,\n    e: React.FormEvent<HTMLFormElement>\n  ) => Promise<any>;\n  /**\n   * Extends existing React's synthetic function onInvalid.\n   * Prevents default and returns which inputs are invalid.\n   * @param inputNames: {[inputName]: boolean}\n   * (true means input with name inputName is invalid)\n   */\n  onInvalid?: (inputNames?: any) => void;\n  /**\n   * Returns the input that has just been changed by the user.\n   * @param e: HTMLInputElement\n   */\n  onChange?: (e: HTMLInputElement) => void;\n  /**\n   * Returns the input that has just been changed by the user.\n   * @param e: HTMLInputElement\n   */\n  onAllChange?: (json: object) => void;\n  /**\n   * Used to change submit button's text\n   */\n  submitButtonText?: string | null;\n  /**\n   * Appears at the bottom of the form.\n   */\n  footnote?: JSX.Element;\n} & React.FormHTMLAttributes<any>;\n\nexport type FormState = {\n  inProgress: boolean;\n  errorText?: string;\n  formValid: boolean;\n  inputsInvalid: object;\n  setInputValidity: (name: string, valid: boolean) => void;\n  submitCounter: number;\n  clearAllInputsValidity: () => void;\n};\n\nexport const FormValidationContext = React.createContext({\n  inProgress: false,\n  formValid: false,\n  submitCounter: 0,\n  inputsInvalid: {}\n});\n\nclass Form extends React.Component<FormProps, FormState> {\n  state = {\n    inProgress: false,\n    errorText: undefined,\n    formValid: false,\n    inputsInvalid: {},\n    submitCounter: 0,\n    showRequiredFields: true,\n    setInputValidity: this.setInputValidity.bind(this),\n    clearAllInputsValidity: this.clearAllInputsValidity.bind(this)\n  };\n\n  static defaultProps = {\n    submitButtonText: 'Submit'\n  };\n\n  private formObj: React.RefObject<HTMLFormElement>;\n\n  constructor(props: any) {\n    super(props);\n    this.formObj = React.createRef();\n  }\n\n  /**\n   * When there are series of forms, this can be used to\n   * @param name\n   * @param valid\n   */\n  setInputValidity(name: string, valid: boolean): void {\n    if (!this.state) return;\n    const inputs = this.state.inputsInvalid;\n    if (inputs[name] === valid) {\n    } else {\n      inputs[name] = valid;\n      const invalids = Object.keys(inputs).filter((e) => inputs[e] === true);\n      this.setState({\n        inputsInvalid: inputs,\n        formValid: invalids.length === 0\n      });\n    }\n  }\n\n  clearAllInputsValidity(): void {\n    this.setState({\n      inputsInvalid: {},\n      formValid: true\n    });\n  }\n\n  render(): React.ReactNode {\n    const { errorText } = this.state;\n    const { footnote, submitButtonText, ...rest } = this.props;\n\n    return (\n      <form\n        {...rest}\n        ref={this.formObj}\n        className={`form-component ${this.props.className || ''}`}\n        onSubmit={(e: React.FormEvent<HTMLFormElement>): void => {\n          e.preventDefault();\n          // check if inputs are all valid first\n          const allInputsValid = this.state.formValid;\n          const isEmpty = Object.keys(this.state.inputsInvalid).length === 0;\n          if (!isEmpty && !allInputsValid) {\n            console.log(\n              'Error: All inputs are not valid!',\n              this.state.inputsInvalid\n            );\n            this.props.onInvalid &&\n              this.props.onInvalid(this.state.inputsInvalid);\n            this.setState({ submitCounter: this.state.submitCounter + 1 });\n            return;\n          }\n\n          // convert formdata to json\n          const jsonData = this.getJsonData(e.target);\n\n          this.setState({ inProgress: true });\n\n          if (this.props.onSubmit) {\n            this.props\n              .onSubmit(jsonData, e)\n              .then(() => {\n                this.setState({ inProgress: false, errorText: undefined });\n              })\n              .catch((error: Error) => {\n                this.setState({\n                  inProgress: false,\n                  errorText: error.message || '',\n                  submitCounter: this.state.submitCounter + 1\n                });\n              });\n          } else {\n            this.setState({\n              inProgress: false,\n              submitCounter: this.state.submitCounter + 1\n            });\n          }\n        }}\n        onInvalid={(e): void => {\n          e.preventDefault();\n          this.setState({ submitCounter: this.state.submitCounter + 1 });\n          this.props.onInvalid &&\n            this.props.onInvalid(this.state.inputsInvalid);\n        }}\n        onChange={(e): void => {\n          const input = e.target as HTMLInputElement;\n          this.props.onChange && this.props.onChange(input);\n          this.props.onAllChange &&\n            this.props.onAllChange(this.getJsonData(this.formObj.current));\n        }}\n      >\n        <FormValidationContext.Provider value={this.state}>\n          {this.props.children}\n\n          {errorText && !this.state.inProgress ? (\n            <div className='form-error-box'>\n              <small>{errorText}</small>\n            </div>\n          ) : null}\n\n          {this.props.submitButtonText !== null && (\n            <Button\n              type='submit'\n              isLoading={this.state.inProgress}\n              disabled={this.state.inProgress}\n              title={this.props.submitButtonText}\n            />\n          )}\n          <div>\n            {this.props.footnote && (\n              <small>\n                <br />\n                {this.props.footnote}\n              </small>\n            )}\n          </div>\n        </FormValidationContext.Provider>\n      </form>\n    );\n  }\n\n  public getJsonData(form: any): object {\n    const formData = new window.FormData(form);\n    const object = {};\n    formData.forEach((value, key) => {\n      value = (value as string).trim();\n      if (object[key] !== undefined) object[key] += value;\n      else object[key] = value;\n    });\n    return object;\n  }\n}\n\nexport default Form;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Grid/Grid.tsx",["492"],"import React, { CSSProperties, FC } from 'react';\nimport { makeClass, setCSSVar } from 'utils/Helpers';\n\ntype GridProps = {\n  /**\n   * `grid-template-column` value\n   */\n  template?: string;\n  /**\n   * `grid-template-column` value for tablet and lower\n   */\n  templateTablet?: string;\n  /**\n   * `grid-template-column` value for mobile and lower\n   */\n  templateMobile?: string;\n  /**\n   * `grid-gap` value. Can be made responsive by modifying the value\n   * of css variable on different breakpoints.\n   */\n  gap?: string;\n  /**\n   * Any set of React's CSS Properties\n   */\n  gridStyles?: CSSProperties;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Grid: FC<GridProps> = (props: GridProps) => {\n  const {\n    template,\n    templateTablet,\n    templateMobile,\n    gap,\n    gridStyles,\n    ...rest\n  } = props;\n\n  const classNames = makeClass([props.className, 'layout-grid']);\n\n  const styleVars = setCSSVar({\n    '--grid-template': template,\n    '--grid-template-tablet': templateTablet,\n    '--grid-template-mobile': templateMobile || templateTablet,\n    '--grid-gap': gap\n  });\n\n  const modifiedStyles = Object.assign(\n    props.style || {},\n    styleVars,\n    props.gridStyles || {}\n  );\n\n  return (\n    <section {...rest} className={classNames} style={modifiedStyles}>\n      {props.children}\n    </section>\n  );\n};\n\nGrid.defaultProps = {\n  template: 'repeat(auto-fill, minmax(200px, 1fr))',\n  gap: 'var(--spacing-gap)'\n};\n\nexport default Grid;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/Header.tsx",["493"],"import React, { FC } from 'react';\nimport { getPathBreaks, makeClass, WINDOW } from 'utils/Helpers';\nimport { LinkType } from 'models/Link';\nimport Container from 'components/Container';\nimport Navigation from './Navigation';\nimport LanguageSelect from './LanguageSelector/LanguageSelector';\n\ntype HeaderProps = {\n  /**\n   * Displays the navigation links.\n   * e.g.\n   * `\n   * navigation={<navigation/>}\n   * `\n   */\n  siteLinks?: LinkType[];\n  localeInfo?: any;\n} & React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * Use `Header` to highlight key info with a predefined status.\n */\nconst Header: FC<HeaderProps> = (props: HeaderProps) => {\n  const { siteLinks, className, localeInfo } = props;\n  const classes = makeClass(['d-header', className]);\n\n  const currActiveLink =\n    siteLinks?.findIndex((e) => {\n      let current = getPathBreaks().filter((e) => e !== '/')[0];\n      let target = getPathBreaks(e.to).filter((e) => e !== '/')[0];\n      return target === current;\n    }) || -1;\n\n  return (\n    <div className={classes}>\n      <Container className='d-header__nav' layout='maxWidth' pad='Horizontal'>\n        {siteLinks && (\n          <Navigation\n            mobileAnimationDirection='top'\n            siteLinks={siteLinks}\n            active={currActiveLink}\n          />\n        )}\n        {localeInfo && (\n          <Container breakpoint='Desktop'>\n            <LanguageSelect {...localeInfo} />\n          </Container>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nHeader.displayName = 'Header';\nHeader.defaultProps = {};\n\nexport default Header;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/CookieBanner/CookieBanner.tsx",["494","495","496","497","498","499"],"import React from 'react';\nimport Cookies from 'js-cookie';\nimport { Cookie } from 'models/Cookie';\n\nimport { makeClass, WINDOW } from 'utils/Helpers';\nimport Container from 'components/Container';\nimport Button from 'elements/Button';\n\nexport type CookieBannerProps = {\n  caption?: string;\n  description?: JSX.Element;\n  buttonText?: string;\n  setAnalyticsCookie?: boolean;\n  setTrackingCookie?: boolean;\n};\n\nclass \nCookieBanner extends React.Component<CookieBannerProps> {\n  state = {\n    visible: false\n  };\n\n  componentDidMount(): void {\n    if (!Cookies.get(Cookie.FUNCTIONAL)) {\n      this.setState({\n        visible: true\n      });\n    }\n  }\n\n  componentDidUpdate(_prevProps: Readonly<CookieBannerProps>, prevState): void {\n    if (prevState.visible !== this.state.visible) {\n      WINDOW.dispatchEvent(new window.Event('resize'));\n    }\n  }\n\n  setCookies() {\n    Cookies.set(Cookie.FUNCTIONAL, 'true', { expires: 365 });\n    this.props.setAnalyticsCookie &&\n      Cookies.set(Cookie.ANALYTICS, 'true', { expires: 365 });\n    this.setState({\n      visible: false\n    });\n  }\n\n  render() {\n    if (!this.state.visible) return null;\n    let { caption, buttonText, description } = this.props;\n    return (\n      <Container className={makeClass(['d-CookieBanner'])} layout='maxWidth'>\n        <div className='d-CookieBanner__container'>\n          <div className='d-CookieBanner__caption'>{caption}</div>\n          <small>{description}</small>\n          <Button appearance='secondary' onClick={() => this.setCookies()}>\n            {buttonText}\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\n\n// @ts-ignore\nCookieBanner.defaultProps = {\n  caption: 'We use Cookies',\n  buttonText: 'Got it!'\n};\n\nexport default CookieBanner;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/elements/Loaders/Loaders.tsx",["500"],"import React from 'react';\nimport { setCSSVar } from 'utils/Helpers';\n\ntype SpinnerProps = {\n  /**\n   * Type refers to css className. Pre-defined classnames:\n   * `spinner` , `gg-spinner`\n   */\n  type?: 'spinner' | 'gg-spinner' | string;\n  /**\n   * transform scale value\n   */\n  size?: number;\n};\n\nconst Spinner = ({ size = 1, type = 'spinner' }: SpinnerProps): JSX.Element => {\n  return (\n    <span\n      className={type}\n      style={setCSSVar({\n        '--val-spinner-size': size\n      })}\n    />\n  );\n};\n\nSpinner.defaultProps = {\n  type: 'spinner',\n  size: 1\n};\n\nexport default Spinner;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/LanguageSelector/LanguageSelector.tsx",["501","502"],"import React, { useState } from 'react';\nimport { cleanPath, makeClass } from 'utils/Helpers';\nimport './LanguageSelector.scss';\n\nexport type LanguageType = { code: string; icon: any; name: string };\n\nexport type LanguageSelectorProps = {\n  /**\n   * Array of `{ code: string; icon: any; name: string }`\n   */\n  languages: Array<LanguageType>;\n  /**\n   * `{ code: string; icon: any; name: string }`\n   */\n  activeLanguage: LanguageType;\n  /**\n   * Prefix name for the url. When a lang is selected, this url will be appended\n   * with lang code. e.g. `/` for `/fr/` when french is selected.\n   */\n  languageChangeUrlPrefix?: string;\n};\n\nconst LanguageSelect = (props: LanguageSelectorProps) => {\n  const { languages, activeLanguage } = props;\n  const [isClosed, setClosed] = useState(true);\n\n  return (\n    <div className='d-LanguageSelector' defaultValue={activeLanguage.code}>\n      <img\n        src={activeLanguage.icon}\n        onClick={() => setClosed(!isClosed)}\n        alt={activeLanguage.name}\n      />\n      <ul className={makeClass(['languagepicker', isClosed && 'hidden'])}>\n        {languages\n          .filter((e) => e.name)\n          .map((lang) => (\n            <li key={lang.code}>\n              <a\n                href={cleanPath(\n                  (props.languageChangeUrlPrefix || '/') + lang.code\n                )}\n              >\n                <img src={lang.icon} alt={lang.name} title={lang.name} />\n              </a>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport const generateLang = (code: string): LanguageType | undefined => {\n  const aPath = '/assets/images/languages/';\n  switch (code) {\n    case 'en':\n      return {\n        code: 'en',\n        icon: `${aPath}united-kingdom.png`,\n        name: 'English'\n      };\n    case 'en-US':\n      return {\n        code: 'en-US',\n        icon: `${aPath}united-states.png`,\n        name: 'English (US)'\n      };\n    case 'en-GB':\n      return {\n        code: 'en-GB',\n        icon: `${aPath}united-kingdom.png`,\n        name: 'English (GB)'\n      };\n    case 'fr':\n      return { code: 'fr', icon: `${aPath}france.png`, name: 'Français' };\n    case 'de':\n      return { code: 'de', icon: `${aPath}germany.png`, name: 'German' };\n    case 'es':\n      return { code: 'es', icon: `${aPath}spain.png`, name: 'Español' };\n    default:\n      return undefined;\n  }\n};\n\nexport const DEFAULT_LANGS = ['en', 'fr', 'de', 'es'];\n\nexport default LanguageSelect;\n","/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/Navigation/index.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/models/Cookie.ts",[],"/Users/snehil.bhushan/Documents/recreational/snehil.me/snehil.me/src/components/Header/Navigation/Navigation.tsx",["503"],"import React, { FC } from 'react';\nimport { makeClass } from 'utils/Helpers';\nimport Link from 'elements/Link/';\nimport Button from 'elements/Button/';\nimport { LinkType } from 'models';\n\ntype NavigationProps = {\n  /**\n   * Displays the navigation links.\n   * e.g.\n   * `{\n   * to: string, title: string\n   * `}\n   */\n  siteLinks: LinkType[];\n  /**\n   * Displays the slide transition direction on mobile.\n   * e.g.\n   * `{\n   * top | left | right\n   * `}\n   */\n  mobileAnimationDirection?: 'top' | 'left' | 'right';\n  /**\n   * Displays the active state on given index in siteLink[]\n   */\n  active?: number;\n} & React.HTMLAttributes<HTMLDivElement>;\n\ntype ItemType = {\n  title?: string;\n  to: string;\n  appearance?: string | any;\n  icon?: JSX.Element;\n};\n/**\n * Use `Navigation` to highlight key info with a predefined status.\n */\nconst Navigation: FC<NavigationProps> = (props: NavigationProps) => {\n  const { siteLinks, mobileAnimationDirection, className, active } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = makeClass(['d-nav', className]);\n\n  return (\n    <nav className={classes}>\n      <Button\n        className='d-nav__nav-toggle'\n        data-open={open}\n        onClick={() => setOpen(!open)}\n        aria-label='Menu'\n      />\n      <div className='d-nav__item'>\n        <ul\n          className='d-nav__links'\n          data-open={open}\n          data-direction={mobileAnimationDirection}\n        >\n          {siteLinks?.map((item: ItemType, i: number) => (\n            <li key={item.to + i} className='d-nav__links-link'>\n              <Link\n                {...item}\n                className={makeClass(['d-link', active === i && 'active'])}\n                aria-label={item.title}\n              >\n                {item.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nNavigation.displayName = 'Navigation';\nNavigation.defaultProps = {\n  mobileAnimationDirection: 'top'\n};\n\nexport default Navigation;\n",{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":28,"column":8,"nodeType":"510","messageId":"511","endLine":28,"endColumn":42},{"ruleId":"508","severity":1,"message":"509","line":137,"column":8,"nodeType":"510","messageId":"511","endLine":137,"endColumn":29},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":13,"column":1,"nodeType":"510","messageId":"511","endLine":13,"endColumn":15},{"ruleId":"508","severity":1,"message":"509","line":14,"column":3,"nodeType":"512","messageId":"511","endLine":14,"endColumn":48},{"ruleId":"513","severity":2,"message":"514","line":14,"column":41,"nodeType":"515","messageId":"516","endLine":14,"endColumn":47},{"ruleId":"513","severity":2,"message":"514","line":19,"column":36,"nodeType":"515","messageId":"516","endLine":19,"endColumn":42},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":11,"column":18,"nodeType":"517","messageId":"511","endLine":11,"endColumn":47},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":36,"column":1,"nodeType":"510","messageId":"511","endLine":36,"endColumn":36},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"513","severity":2,"message":"514","line":11,"column":10,"nodeType":"515","messageId":"516","endLine":11,"endColumn":16},{"ruleId":"513","severity":2,"message":"514","line":13,"column":25,"nodeType":"515","messageId":"516","endLine":13,"endColumn":31},{"ruleId":"508","severity":1,"message":"509","line":32,"column":26,"nodeType":"512","messageId":"511","endLine":32,"endColumn":51},{"ruleId":"508","severity":1,"message":"509","line":36,"column":30,"nodeType":"512","messageId":"511","endLine":36,"endColumn":54},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":15,"column":39,"nodeType":"517","messageId":"511","endLine":15,"endColumn":54},{"ruleId":"508","severity":1,"message":"518","line":15,"column":40,"nodeType":"506","messageId":"519","endLine":15,"endColumn":44},{"ruleId":"508","severity":1,"message":"520","line":15,"column":46,"nodeType":"506","messageId":"519","endLine":15,"endColumn":50},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":42,"column":16,"nodeType":"517","messageId":"511","endLine":42,"endColumn":40},{"ruleId":"508","severity":1,"message":"521","line":12,"column":15,"nodeType":"522","messageId":"523","endLine":12,"endColumn":50},{"ruleId":"508","severity":1,"message":"524","line":12,"column":52,"nodeType":"506","messageId":"519","endLine":12,"endColumn":57},{"ruleId":"508","severity":1,"message":"509","line":21,"column":3,"nodeType":"512","messageId":"511","endLine":21,"endColumn":28},{"ruleId":"508","severity":1,"message":"509","line":26,"column":3,"nodeType":"512","messageId":"511","endLine":26,"endColumn":20},{"ruleId":"508","severity":1,"message":"509","line":34,"column":3,"nodeType":"512","messageId":"511","endLine":34,"endColumn":21},{"ruleId":"508","severity":1,"message":"509","line":40,"column":3,"nodeType":"512","messageId":"511","endLine":40,"endColumn":56},{"ruleId":"508","severity":1,"message":"525","line":40,"column":48,"nodeType":"506","messageId":"519","endLine":40,"endColumn":55},{"ruleId":"508","severity":1,"message":"509","line":59,"column":3,"nodeType":"512","messageId":"511","endLine":59,"endColumn":60},{"ruleId":"508","severity":1,"message":"521","line":59,"column":20,"nodeType":"522","messageId":"523","endLine":59,"endColumn":59},{"ruleId":"526","severity":2,"message":"527","line":59,"column":22,"nodeType":"506","messageId":"528","endLine":59,"endColumn":34},{"ruleId":"508","severity":1,"message":"509","line":68,"column":3,"nodeType":"512","messageId":"511","endLine":68,"endColumn":35},{"ruleId":"508","severity":1,"message":"529","line":68,"column":20,"nodeType":"506","messageId":"519","endLine":68,"endColumn":25},{"ruleId":"508","severity":1,"message":"525","line":68,"column":27,"nodeType":"506","messageId":"519","endLine":68,"endColumn":34},{"ruleId":"508","severity":1,"message":"509","line":13,"column":26,"nodeType":"517","messageId":"511","endLine":13,"endColumn":62},{"ruleId":"508","severity":1,"message":"509","line":18,"column":31,"nodeType":"517","messageId":"511","endLine":18,"endColumn":36},{"ruleId":"508","severity":1,"message":"509","line":79,"column":33,"nodeType":"517","messageId":"511","endLine":79,"endColumn":49},{"ruleId":"508","severity":1,"message":"509","line":83,"column":26,"nodeType":"512","messageId":"511","endLine":83,"endColumn":51},{"ruleId":"508","severity":1,"message":"509","line":87,"column":30,"nodeType":"512","messageId":"511","endLine":87,"endColumn":41},{"ruleId":"508","severity":1,"message":"509","line":92,"column":31,"nodeType":"517","messageId":"511","endLine":92,"endColumn":58},{"ruleId":"530","severity":1,"message":"531","line":94,"column":12,"nodeType":"532","messageId":"533","endLine":94,"endColumn":17,"suggestions":"534"},{"ruleId":"530","severity":1,"message":"531","line":94,"column":26,"nodeType":"532","messageId":"533","endLine":94,"endColumn":31,"suggestions":"535"},{"ruleId":"508","severity":1,"message":"509","line":100,"column":33,"nodeType":"517","messageId":"511","endLine":100,"endColumn":60},{"ruleId":"530","severity":1,"message":"531","line":102,"column":12,"nodeType":"532","messageId":"533","endLine":102,"endColumn":17,"suggestions":"536"},{"ruleId":"530","severity":1,"message":"531","line":102,"column":28,"nodeType":"532","messageId":"533","endLine":102,"endColumn":33,"suggestions":"537"},{"ruleId":"513","severity":2,"message":"514","line":13,"column":23,"nodeType":"515","messageId":"516","endLine":13,"endColumn":29},{"ruleId":"513","severity":2,"message":"514","line":13,"column":33,"nodeType":"515","messageId":"516","endLine":13,"endColumn":39},{"ruleId":"508","severity":1,"message":"538","line":99,"column":5,"nodeType":"506","messageId":"539","endLine":99,"endColumn":14},{"ruleId":"540","severity":2,"message":"541","line":155,"column":36,"nodeType":null,"endLine":157,"endColumn":5,"fix":"542"},{"ruleId":"508","severity":1,"message":"509","line":164,"column":3,"nodeType":"512","messageId":"511","endLine":164,"endColumn":22},{"ruleId":"543","severity":2,"message":"544","line":204,"column":7,"nodeType":"545","messageId":"546","endLine":204,"endColumn":20},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":4,"column":8,"nodeType":"510","messageId":"511","endLine":4,"endColumn":53},{"ruleId":"508","severity":1,"message":"547","line":4,"column":31,"nodeType":"506","messageId":"519","endLine":4,"endColumn":42},{"ruleId":"508","severity":1,"message":"548","line":4,"column":44,"nodeType":"506","messageId":"519","endLine":4,"endColumn":52},{"ruleId":"508","severity":1,"message":"509","line":16,"column":8,"nodeType":"510","messageId":"511","endLine":16,"endColumn":37},{"ruleId":"508","severity":1,"message":"549","line":16,"column":32,"nodeType":"506","messageId":"519","endLine":16,"endColumn":36},{"ruleId":"508","severity":1,"message":"509","line":37,"column":8,"nodeType":"510","messageId":"511","endLine":37,"endColumn":74},{"ruleId":"508","severity":1,"message":"550","line":37,"column":29,"nodeType":"506","messageId":"519","endLine":37,"endColumn":33},{"ruleId":"508","severity":1,"message":"509","line":18,"column":32,"nodeType":"517","messageId":"511","endLine":18,"endColumn":59},{"ruleId":"508","severity":1,"message":"509","line":24,"column":28,"nodeType":"517","messageId":"511","endLine":24,"endColumn":45},{"ruleId":"508","severity":1,"message":"509","line":37,"column":34,"nodeType":"517","messageId":"511","endLine":37,"endColumn":39},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"551","severity":2,"message":"552","line":27,"column":39,"nodeType":"517","messageId":"553","endLine":27,"endColumn":41},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"513","severity":2,"message":"554","line":4,"column":29,"nodeType":"555","messageId":"516","endLine":4,"endColumn":31},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":18,"nodeType":"517","messageId":"511","endLine":3,"endColumn":59},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":25,"nodeType":"517","messageId":"511","endLine":3,"endColumn":66},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":24,"nodeType":"517","messageId":"511","endLine":3,"endColumn":65},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":21,"nodeType":"517","messageId":"511","endLine":3,"endColumn":62},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":18,"nodeType":"517","messageId":"511","endLine":3,"endColumn":59},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":20,"nodeType":"517","messageId":"511","endLine":3,"endColumn":61},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":28,"nodeType":"517","messageId":"511","endLine":3,"endColumn":69},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":21,"nodeType":"517","messageId":"511","endLine":3,"endColumn":62},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":19,"nodeType":"517","messageId":"511","endLine":3,"endColumn":60},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":3,"column":19,"nodeType":"517","messageId":"511","endLine":3,"endColumn":60},{"ruleId":"508","severity":1,"message":"509","line":3,"column":28,"nodeType":"517","messageId":"511","endLine":3,"endColumn":37},{"ruleId":"508","severity":1,"message":"556","line":3,"column":29,"nodeType":"506","messageId":"519","endLine":3,"endColumn":33},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"557","line":7,"column":11,"nodeType":"506","messageId":"507","endLine":7,"endColumn":21},{"ruleId":"504","severity":2,"message":"558","line":8,"column":11,"nodeType":"506","messageId":"507","endLine":8,"endColumn":21},{"ruleId":"504","severity":2,"message":"557","line":9,"column":15,"nodeType":"506","messageId":"507","endLine":9,"endColumn":25},{"ruleId":"508","severity":1,"message":"559","line":128,"column":15,"nodeType":"506","messageId":"539","endLine":128,"endColumn":25},{"ruleId":"508","severity":1,"message":"560","line":139,"column":5,"nodeType":"506","messageId":"539","endLine":139,"endColumn":19},{"ruleId":"508","severity":1,"message":"561","line":140,"column":5,"nodeType":"506","messageId":"539","endLine":140,"endColumn":19},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":22,"column":22,"nodeType":"517","messageId":"511","endLine":22,"endColumn":50},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":6,"column":23,"nodeType":"517","messageId":"511","endLine":6,"endColumn":74},{"ruleId":"508","severity":1,"message":"562","line":6,"column":24,"nodeType":"506","messageId":"519","endLine":6,"endColumn":29},{"ruleId":"508","severity":1,"message":"509","line":22,"column":19,"nodeType":"517","messageId":"511","endLine":27,"endColumn":21},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":13,"nodeType":"506","messageId":"507","endLine":1,"endColumn":18},{"ruleId":"513","severity":2,"message":"514","line":14,"column":11,"nodeType":"515","messageId":"516","endLine":14,"endColumn":17},{"ruleId":"513","severity":2,"message":"514","line":33,"column":24,"nodeType":"515","messageId":"516","endLine":33,"endColumn":30},{"ruleId":"513","severity":2,"message":"514","line":48,"column":18,"nodeType":"515","messageId":"516","endLine":48,"endColumn":24},{"ruleId":"508","severity":1,"message":"559","line":79,"column":15,"nodeType":"506","messageId":"539","endLine":79,"endColumn":25},{"ruleId":"563","severity":2,"message":"564","line":92,"column":33,"nodeType":"565","messageId":"566","endLine":93,"endColumn":6},{"ruleId":"508","severity":1,"message":"567","line":203,"column":22,"nodeType":"506","messageId":"539","endLine":203,"endColumn":31},{"ruleId":"513","severity":2,"message":"514","line":203,"column":34,"nodeType":"515","messageId":"516","endLine":203,"endColumn":40},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"540","severity":2,"message":"568","line":17,"column":7,"nodeType":null,"endLine":18,"endColumn":1,"fix":"569"},{"ruleId":"508","severity":1,"message":"570","line":31,"column":63,"nodeType":"506","messageId":"519","endLine":31,"endColumn":72},{"ruleId":"508","severity":1,"message":"509","line":37,"column":3,"nodeType":"512","messageId":"511","endLine":37,"endColumn":15},{"ruleId":"508","severity":1,"message":"509","line":46,"column":3,"nodeType":"512","messageId":"511","endLine":46,"endColumn":11},{"ruleId":"543","severity":2,"message":"544","line":63,"column":1,"nodeType":"545","messageId":"546","endLine":63,"endColumn":14},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":23,"column":24,"nodeType":"517","messageId":"511","endLine":23,"endColumn":57},{"ruleId":"504","severity":2,"message":"505","line":1,"column":8,"nodeType":"506","messageId":"507","endLine":1,"endColumn":13},"no-use-before-define","'React' was used before it was defined.","Identifier","usedBeforeDefined","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","FunctionExpression","@typescript-eslint/ban-types","Don't use `object` as a type. The `object` type is currently hard to use ([see this issue](https://github.com/microsoft/TypeScript/issues/21732)).\nConsider using `Record<string, unknown>` instead, as it allows you to more easily inspect and use the keys.","TSObjectKeyword","bannedTypeMessage","ArrowFunctionExpression","Argument 'item' should be typed.","missingArgType","Argument 'key' should be typed.","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","Argument 'host' should be typed.","Argument 'filter' should be typed.","camelcase","Identifier 'content_type' is not in camel case.","notCamelCase","Argument 'query' should be typed.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["571"],["572"],["573"],["574"],"Argument 'page' should be typed with a non-any type.","anyTypedArg","prettier/prettier","Replace `flatten(pathsArray))·as·Array<⏎······ReactStaticRoute⏎····` with `⏎······flatten(pathsArray)⏎····)·as·Array<ReactStaticRoute`",{"range":"575","text":"576"},"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment","Argument 'contentItem' should be typed.","Argument 'handlers' should be typed.","Argument 'node' should be typed.","Argument 'data' should be typed.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead.","TSTypeLiteral","Argument 'link' should be typed.","'ErrorGroup' was used before it was defined.","'InputProps' was used before it was defined.","Argument 'props' should be typed with a non-any type.","Argument 'nextProps' should be typed with a non-any type.","Argument 'prevState' should be typed with a non-any type.","Argument 'image' should be typed.","no-empty","Empty block statement.","BlockStatement","unexpected","Argument 'form' should be typed with a non-any type.","Delete `⏎`",{"range":"577","text":"578"},"Argument 'prevState' should be typed.",{"messageId":"579","fix":"580","desc":"581"},{"messageId":"579","fix":"582","desc":"581"},{"messageId":"579","fix":"583","desc":"581"},{"messageId":"579","fix":"584","desc":"581"},[3834,3892],"\n      flatten(pathsArray)\n    ) as Array<ReactStaticRoute",[416,417],"","suggestOptionalChain",{"range":"585","text":"586"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"587","text":"586"},{"range":"588","text":"586"},{"range":"589","text":"586"},[2488,2489],"?",[2502,2503],[2660,2661],[2676,2677]]